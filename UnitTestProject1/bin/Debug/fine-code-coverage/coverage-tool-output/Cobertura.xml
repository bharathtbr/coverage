<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE coverage SYSTEM "http://cobertura.sourceforge.net/xml/coverage-04.dtd">
<coverage line-rate="0.1733709010251184" branch-rate="0.09529635671560631" lines-covered="2892" lines-valid="16681" branches-covered="701" branches-valid="7356" complexity="6761" version="0" timestamp="1645195125">
  <sources />
  <packages>
    <package name="Antlr3.Runtime" line-rate="0" branch-rate="0" complexity="1476">
      <classes>
        <class name="Antlr.Runtime.ANTLRFileStream" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\ANTLRFileStream.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="SourceName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Text.Encoding)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Load" signature="(System.String,System.Text.Encoding)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.ANTLRInputStream" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\ANTLRInputStream.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.IO.Stream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.IO.Stream,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.IO.Stream,System.Text.Encoding)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.IO.Stream,System.Int32,System.Text.Encoding)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.IO.Stream,System.Int32,System.Int32,System.Text.Encoding)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStreamReader" signature="(System.IO.Stream,System.Text.Encoding)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.ANTLRReaderStream" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\ANTLRReaderStream.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.IO.TextReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.IO.TextReader,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.IO.TextReader,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Load" signature="(System.IO.TextReader,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.ANTLRStringStream" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\ANTLRStringStream.cs" line-rate="1" branch-rate="1" complexity="10">
          <methods>
            <method name="Index" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Line" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CharPositionInLine" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CharPositionInLine" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Char[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Char[],System.Int32,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Consume" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="LA" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LT" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Mark" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Rewind" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Rewind" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Release" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Seek" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Substring" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.AstParserRuleReturnScope`2" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\AstParserRuleReturnScope`2.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Tree" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Tree" signature="(TTree)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="r.Runtime.IAstRuleReturnScope.get_Tree" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.BaseRecognizer" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\BaseRecognizer.cs" line-rate="1" branch-rate="1" complexity="16">
          <methods>
            <method name="NumberOfSyntaxErrors" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BacktrackingLevel" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BacktrackingLevel" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Failed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenNames" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GrammarFileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugListener" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.RecognizerSharedState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetState" signature="(Antlr.Runtime.RecognizerSharedState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitDFAs" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="Match" signature="(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchAny" signature="(Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MismatchIsUnwantedToken" signature="(Antlr.Runtime.IIntStream,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MismatchIsMissingToken" signature="(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReportError" signature="(Antlr.Runtime.RecognitionException)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayRecognitionError" signature="(System.String[],Antlr.Runtime.RecognitionException)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetErrorMessage" signature="(Antlr.Runtime.RecognitionException,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetErrorHeader" signature="(Antlr.Runtime.RecognitionException)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTokenErrorDisplay" signature="(Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EmitErrorMessage" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Recover" signature="(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeginResync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="EndResync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ComputeErrorRecoverySet" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ComputeContextSensitiveRuleFOLLOW" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CombineFollows" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RecoverFromMismatchedToken" signature="(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RecoverFromMismatchedSet" signature="(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,Antlr.Runtime.BitSet)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCurrentInputSymbol" signature="(Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMissingSymbol" signature="(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,System.Int32,Antlr.Runtime.BitSet)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConsumeUntil" signature="(Antlr.Runtime.IIntStream,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConsumeUntil" signature="(Antlr.Runtime.IIntStream,Antlr.Runtime.BitSet)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PushFollow" signature="(Antlr.Runtime.BitSet)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PopFollow" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetRuleInvocationStack" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetRuleInvocationStack" signature="(System.Diagnostics.StackTrace)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToStrings" signature="(System.Collections.Generic.ICollection`1&lt;Antlr.Runtime.IToken&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetRuleMemoization" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AlreadyParsedRule" signature="(Antlr.Runtime.IIntStream,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Memoize" signature="(Antlr.Runtime.IIntStream,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetRuleMemoizationCacheSize" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="TraceIn" signature="(System.String,System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TraceOut" signature="(System.String,System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugEnterRule" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugExitRule" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugEnterSubRule" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugExitSubRule" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugEnterAlt" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugEnterDecision" signature="(System.Int32,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugExitDecision" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugLocation" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugSemanticPredicate" signature="(System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugBeginBacktrack" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugEndBacktrack" signature="(System.Int32,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugRecognitionException" signature="(Antlr.Runtime.RecognitionException)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.BitSet" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\BitSet.cs" line-rate="1" branch-rate="1" complexity="17">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.UInt64[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Of" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Of" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Of" signature="(System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Of" signature="(System.Int32,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Or" signature="(Antlr.Runtime.BitSet)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GrowToInclude" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OrInPlace" signature="(Antlr.Runtime.BitSet)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetSize" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BitMask" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clone" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Size" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Member" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Remove" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNil" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="NumWordsToHold" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NumBits" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="LengthInLongWords" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToArray" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="WordNumber" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToString" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.BufferedTokenStream" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\BufferedTokenStream.cs" line-rate="1" branch-rate="1" complexity="15">
          <methods>
            <method name="TokenSource" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenSource" signature="(Antlr.Runtime.ITokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Index" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastToken" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastRealToken" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaxLookBehind" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.ITokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Mark" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Release" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Rewind" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Rewind" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Seek" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Consume" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Sync" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Fetch" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Get" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LA" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LB" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LT" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Setup" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetTokens" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetTokens" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTokens" signature="(System.Int32,System.Int32,Antlr.Runtime.BitSet)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTokens" signature="(System.Int32,System.Int32,System.Collections.Generic.IEnumerable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTokens" signature="(System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ToString" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="(Antlr.Runtime.IToken,Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Fill" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.ClassicToken" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\ClassicToken.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Text" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Text" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Line" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CharPositionInLine" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CharPositionInLine" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Channel" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Channel" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartIndex" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopIndex" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenIndex" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InputStream" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InputStream" signature="(Antlr.Runtime.ICharStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.CommonToken" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\CommonToken.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="Text" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Text" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Line" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CharPositionInLine" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CharPositionInLine" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Channel" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Channel" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartIndex" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopIndex" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenIndex" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InputStream" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InputStream" signature="(Antlr.Runtime.ICharStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.ICharStream,System.Int32,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="OnSerializing" signature="(System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.CommonTokenStream" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\CommonTokenStream.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="Channel" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenSource" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenSource" signature="(Antlr.Runtime.ITokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.ITokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.ITokenSource,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Consume" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="LB" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LT" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipOffTokenChannels" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipOffTokenChannelsReverse" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Setup" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.DFA" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\DFA.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.SpecialStateTransitionHandler)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Predict" signature="(Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DfaDebugMessage" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DfaDebugInvalidSymbol" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NoViableAlt" signature="(System.Int32,Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Error" signature="(Antlr.Runtime.NoViableAltException)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SpecialStateTransitionDefault" signature="(Antlr.Runtime.DFA,System.Int32,Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnpackEncodedString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnpackEncodedStringToUnsignedChars" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugRecognitionException" signature="(Antlr.Runtime.RecognitionException)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.EarlyExitException" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\EarlyExitException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="DecisionNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,Antlr.Runtime.IIntStream,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetObjectData" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.FailedPredicateException" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\FailedPredicateException.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="RuleName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PredicateText" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.IIntStream,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Antlr.Runtime.IIntStream,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Antlr.Runtime.IIntStream,System.String,System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetObjectData" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.GrammarRuleAttribute" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\GrammarRuleAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.LegacyCommonTokenStream" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\LegacyCommonTokenStream.cs" line-rate="1" branch-rate="1" complexity="22">
          <methods>
            <method name="Index" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenSource" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.ITokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.ITokenSource,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetTokenSource" signature="(Antlr.Runtime.ITokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FillBuffer" signature="()" line-rate="1" branch-rate="1" complexity="11">
              <lines />
            </method>
            <method name="Consume" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="SkipOffTokenChannels" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipOffTokenChannelsReverse" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetTokenTypeChannel" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscardTokenType" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetDiscardOffChannelTokens" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTokens" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetTokens" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTokens" signature="(System.Int32,System.Int32,Antlr.Runtime.BitSet)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTokens" signature="(System.Int32,System.Int32,System.Collections.Generic.IList`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTokens" signature="(System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LT" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LB" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Get" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LA" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Mark" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Release" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Rewind" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Rewind" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Seek" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ToString" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="(Antlr.Runtime.IToken,Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Lexer" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Lexer.cs" line-rate="1" branch-rate="1" complexity="13">
          <methods>
            <method name="Text" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Text" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Line" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CharPositionInLine" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CharPositionInLine" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CharStream" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CharStream" signature="(Antlr.Runtime.ICharStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CharIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.ICharStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.ICharStream,Antlr.Runtime.RecognizerSharedState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="NextToken" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="GetEndOfFileToken" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Skip" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Emit" signature="(Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Emit" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Match" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchAny" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Match" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchRange" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReportError" signature="(Antlr.Runtime.RecognitionException)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetErrorMessage" signature="(Antlr.Runtime.RecognitionException,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCharErrorDisplay" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Recover" signature="(Antlr.Runtime.RecognitionException)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TraceIn" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TraceOut" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParseNextToken" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Misc.FastQueue`1" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Misc\FastQueue.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dequeue" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Enqueue" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Peek" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Misc.ListStack`1" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Misc\ListStack`1.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Peek" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Peek" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryPeek" signature="(T&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryPeek" signature="(System.Int32,T&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pop" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="TryPop" signature="(T&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Push" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Misc.LookaheadStream`1" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Misc\LookaheadStream.cs" line-rate="1" branch-rate="1" complexity="8">
          <methods>
            <method name="EndOfFile" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndOfFile" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PreviousElement" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Index" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Dequeue" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Consume" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="SyncAhead" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Fill" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LT" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Mark" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Release" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Rewind" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Rewind" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Seek" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LB" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.MismatchedNotSetException" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\MismatchedNotSetException.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.BitSet,Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Antlr.Runtime.BitSet,Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Antlr.Runtime.BitSet,Antlr.Runtime.IIntStream,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.MismatchedRangeException" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\MismatchedRangeException.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="A" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="B" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32,Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,System.Int32,Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,System.Int32,Antlr.Runtime.IIntStream,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetObjectData" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.MismatchedSetException" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\MismatchedSetException.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Expecting" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.BitSet,Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Antlr.Runtime.BitSet,Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Antlr.Runtime.BitSet,Antlr.Runtime.IIntStream,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetObjectData" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.MismatchedTokenException" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\MismatchedTokenException.cs" line-rate="1" branch-rate="1" complexity="8">
          <methods>
            <method name="Expecting" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenNames" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,Antlr.Runtime.IIntStream,System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,Antlr.Runtime.IIntStream,System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,Antlr.Runtime.IIntStream,System.Collections.Generic.IList`1&lt;System.String&gt;,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetObjectData" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="7">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.MismatchedTreeNodeException" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\MismatchedTreeNodeException.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Expecting" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,Antlr.Runtime.Tree.ITreeNodeStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,Antlr.Runtime.Tree.ITreeNodeStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,Antlr.Runtime.Tree.ITreeNodeStream,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetObjectData" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.MissingTokenException" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\MissingTokenException.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="MissingType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,Antlr.Runtime.IIntStream,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,Antlr.Runtime.IIntStream,System.Object,System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,Antlr.Runtime.IIntStream,System.Object,System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,Antlr.Runtime.IIntStream,System.Object,System.Collections.Generic.IList`1&lt;System.String&gt;,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.NoViableAltException" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\NoViableAltException.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="DecisionNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GrammarDecisionDescription" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StateNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,System.Int32,Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,System.Int32,Antlr.Runtime.IIntStream,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Int32,System.Int32,Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Int32,System.Int32,Antlr.Runtime.IIntStream,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Int32,System.Int32,Antlr.Runtime.IIntStream,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Int32,System.Int32,Antlr.Runtime.IIntStream,System.Int32,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetObjectData" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Parser" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Parser.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="TokenStream" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenStream" signature="(Antlr.Runtime.ITokenStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.ITokenStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.ITokenStream,Antlr.Runtime.RecognizerSharedState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetCurrentInputSymbol" signature="(Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMissingSymbol" signature="(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,System.Int32,Antlr.Runtime.BitSet)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TraceIn" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TraceOut" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.ParserRuleReturnScope`1" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\ParserRuleReturnScope.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Start" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Start" signature="(TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Stop" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Stop" signature="(TToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="r.Runtime.IRuleReturnScope.get_Start" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="r.Runtime.IRuleReturnScope.get_Stop" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.RecognitionException" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\RecognitionException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="UnexpectedType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApproximateLineInfo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApproximateLineInfo" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Input" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Input" signature="(Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Lookahead" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Token" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Token" signature="(Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Node" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Node" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Character" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Character" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Index" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Index" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Line" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CharPositionInLine" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CharPositionInLine" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.IIntStream,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Antlr.Runtime.IIntStream,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Antlr.Runtime.IIntStream,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Antlr.Runtime.IIntStream,System.Int32,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetObjectData" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExtractInformationFromTreeNodeStream" signature="(Antlr.Runtime.Tree.ITreeNodeStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExtractInformationFromTreeNodeStream" signature="(Antlr.Runtime.Tree.ITreeNodeStream,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.RecognizerSharedState" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\RecognizerSharedState.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.RecognizerSharedState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.TemplateParserRuleReturnScope`2" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\TemplateParserRuleReturnScope`2.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Template" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Template" signature="(TTemplate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="r.Runtime.ITemplateRuleReturnScope.get_Template" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.TokenRewriteStream" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\TokenRewriteStream.cs" line-rate="1" branch-rate="1" complexity="10">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Init" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.ITokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.ITokenSource,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Rollback" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Rollback" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeleteProgram" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="DeleteProgram" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertAfter" signature="(Antlr.Runtime.IToken,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertAfter" signature="(System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertAfter" signature="(System.String,Antlr.Runtime.IToken,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertAfter" signature="(System.String,System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertBefore" signature="(Antlr.Runtime.IToken,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertBefore" signature="(System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertBefore" signature="(System.String,Antlr.Runtime.IToken,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertBefore" signature="(System.String,System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Replace" signature="(System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Replace" signature="(System.Int32,System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Replace" signature="(Antlr.Runtime.IToken,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Replace" signature="(Antlr.Runtime.IToken,Antlr.Runtime.IToken,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Replace" signature="(System.String,System.Int32,System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Replace" signature="(System.String,Antlr.Runtime.IToken,Antlr.Runtime.IToken,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Delete" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Delete" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Delete" signature="(Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Delete" signature="(Antlr.Runtime.IToken,Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Delete" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Delete" signature="(System.String,Antlr.Runtime.IToken,Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetLastRewriteTokenIndex" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetLastRewriteTokenIndex" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetLastRewriteTokenIndex" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetProgram" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeProgram" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToOriginalString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToOriginalString" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReduceToSingleOperationPerIndex" signature="(System.Collections.Generic.IList`1&lt;Antlr.Runtime.TokenRewriteStream/RewriteOperation&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CatOpText" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetKindOfOps" signature="(System.Collections.Generic.IList`1&lt;Antlr.Runtime.TokenRewriteStream/RewriteOperation&gt;,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetKindOfOps" signature="(System.Collections.Generic.IList`1&lt;Antlr.Runtime.TokenRewriteStream/RewriteOperation&gt;,System.Type,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToDebugString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToDebugString" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.TokenRewriteStream,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.TokenRewriteStream,System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(System.Text.StringBuilder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.TokenRewriteStream,System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(System.Text.StringBuilder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.TokenRewriteStream,System.Int32,System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(System.Text.StringBuilder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tokens" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tokens.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.AntlrRuntime_BaseTreeDebugView" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\AntlrRuntime_BaseTreeDebugView.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Children" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.BaseTree)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.AstTreeRuleReturnScope`2" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\AstTreeRuleReturnScope`2.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Tree" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Tree" signature="(TOutputTree)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="r.Runtime.IAstRuleReturnScope.get_Tree" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.BaseTree" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\BaseTree.cs" line-rate="1" branch-rate="1" complexity="16">
          <methods>
            <method name="Children" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Children" signature="(System.Collections.Generic.IList`1&lt;Antlr.Runtime.Tree.ITree&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ChildCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parent" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parent" signature="(Antlr.Runtime.Tree.ITree)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ChildIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ChildIndex" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNil" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITree)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetChild" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFirstChildWithType" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddChild" signature="(Antlr.Runtime.Tree.ITree)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddChildren" signature="(System.Collections.Generic.IEnumerable`1&lt;Antlr.Runtime.Tree.ITree&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetChild" signature="(System.Int32,Antlr.Runtime.Tree.ITree)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InsertChild" signature="(System.Int32,Antlr.Runtime.Tree.ITree)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeleteChild" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReplaceChildren" signature="(System.Int32,System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateChildrenList" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="FreshenParentAndChildIndexes" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="FreshenParentAndChildIndexes" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FreshenParentAndChildIndexesDeeply" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="FreshenParentAndChildIndexesDeeply" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SanityCheckParentAndChildIndexes" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="SanityCheckParentAndChildIndexes" signature="(Antlr.Runtime.Tree.ITree,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasAncestor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAncestor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAncestors" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ToStringTree" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.BaseTreeAdaptor" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\BaseTreeAdaptor.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Nil" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ErrorNode" signature="(Antlr.Runtime.ITokenStream,Antlr.Runtime.IToken,Antlr.Runtime.IToken,Antlr.Runtime.RecognitionException)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNil" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DupNode" signature="(System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DupNode" signature="(System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DupNode" signature="(System.Int32,System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DupTree" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DupTree" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddChild" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BecomeRoot" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RulePostProcessing" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BecomeRoot" signature="(Antlr.Runtime.IToken,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(System.Int32,Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(System.Int32,Antlr.Runtime.IToken,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(Antlr.Runtime.IToken,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(System.Int32,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetType" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetType" signature="(System.Object,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetText" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetText" signature="(System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetChild" signature="(System.Object,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetChild" signature="(System.Object,System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeleteChild" signature="(System.Object,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetChildCount" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetUniqueID" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DupNode" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetTokenBoundaries" signature="(System.Object,Antlr.Runtime.IToken,Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTokenStartIndex" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTokenStopIndex" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetParent" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetParent" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetChildIndex" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetChildIndex" signature="(System.Object,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReplaceChildren" signature="(System.Object,System.Int32,System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTree" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.BufferedTreeNodeStream" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\BufferedTreeNodeStream.cs" line-rate="1" branch-rate="1" complexity="19">
          <methods>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TreeSource" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenStream" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenStream" signature="(Antlr.Runtime.ITokenStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TreeAdaptor" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TreeAdaptor" signature="(Antlr.Runtime.Tree.ITreeAdaptor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueNavigationNodes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueNavigationNodes" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastToken" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastRealToken" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaxLookBehind" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Index" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.Object,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FillBuffer" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="FillBuffer" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNodeIndex" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddNavigationNode" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LT" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCurrentSymbol" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="LB" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Consume" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="LA" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Mark" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Release" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Rewind" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Rewind" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Seek" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Push" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pop" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Iterator" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ReplaceChildren" signature="(System.Object,System.Int32,System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToTokenTypeString" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ToTokenString" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Current" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.BufferedTreeNodeStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="MoveNext" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.CommonErrorNode" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\CommonErrorNode.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="IsNil" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Text" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Text" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.ITokenStream,Antlr.Runtime.IToken,Antlr.Runtime.IToken,Antlr.Runtime.RecognitionException)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.CommonTree" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\CommonTree.cs" line-rate="1" branch-rate="1" complexity="16">
          <methods>
            <method name="CharPositionInLine" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CharPositionInLine" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ChildIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ChildIndex" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNil" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Line" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parent" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parent" signature="(Antlr.Runtime.Tree.ITree)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Text" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Text" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Token" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Token" signature="(Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenStartIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenStartIndex" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenStopIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenStopIndex" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.CommonTree)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DupNode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="SetUnknownTokenBoundaries" signature="()" line-rate="1" branch-rate="1" complexity="10">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.CommonTreeAdaptor" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\CommonTreeAdaptor.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Create" signature="(Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateToken" signature="(System.Int32,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateToken" signature="(Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetToken" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.CommonTreeNodeStream" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\CommonTreeNodeStream.cs" line-rate="1" branch-rate="1" complexity="15">
          <methods>
            <method name="SourceName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenStream" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenStream" signature="(Antlr.Runtime.ITokenStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TreeAdaptor" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TreeAdaptor" signature="(Antlr.Runtime.Tree.ITreeAdaptor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TreeSource" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueNavigationNodes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueNavigationNodes" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="NextElement" signature="()" line-rate="1" branch-rate="1" complexity="7">
              <lines />
            </method>
            <method name="Dequeue" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="IsEndOfFile" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LA" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Push" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pop" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetKnownPositionElement" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasPositionInformation" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReplaceChildren" signature="(System.Object,System.Int32,System.Int32,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToTokenTypeString" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.DotTreeGenerator" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\DotTreeGenerator.cs" line-rate="1" branch-rate="1" complexity="16">
          <methods>
            <method name="ToDot" signature="(System.Object,Antlr.Runtime.Tree.ITreeAdaptor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToDot" signature="(Antlr.Runtime.Tree.ITree)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNodeText" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNodeNumber" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FixString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="DefineNodes" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name="DefineEdges" signature="()" line-rate="1" branch-rate="1" complexity="7">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.ParseTree" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\ParseTree.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="Text" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Text" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenStartIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenStartIndex" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenStopIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TokenStopIndex" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DupNode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ToStringWithHiddenTokens" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="ToInputString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToStringLeaves" signature="(System.Text.StringBuilder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.RewriteCardinalityException" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\RewriteCardinalityException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetObjectData" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.RewriteEarlyExitException" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\RewriteEarlyExitException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.RewriteEmptyStreamException" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\RewriteEmptyStreamException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.RewriteRuleElementStream" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\RewriteRuleElementStream.cs" line-rate="1" branch-rate="1" complexity="10">
          <methods>
            <method name="HasNext" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.String,System.Collections.IList)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Add" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextTree" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="NextCore" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="ToTree" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.RewriteRuleNodeStream" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\RewriteRuleNodeStream.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.String,System.Collections.IList)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextNode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToTree" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dup" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.RewriteRuleSubtreeStream" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\RewriteRuleSubtreeStream.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.String,System.Collections.IList)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextNode" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="Dup" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.RewriteRuleTokenStream" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\RewriteRuleTokenStream.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.String,System.Collections.IList)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextNode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="NextToken" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToTree" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dup" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.TemplateTreeRuleReturnScope`2" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\TemplateTreeRuleReturnScope`2.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Template" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Template" signature="(TTemplate)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="r.Runtime.ITemplateRuleReturnScope.get_Template" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.TreeFilter" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\TreeFilter.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeNodeStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeNodeStream,Antlr.Runtime.RecognizerSharedState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyOnce" signature="(System.Object,Antlr.Runtime.Misc.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Downup" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Topdown" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Bottomup" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.TreeIterator" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\TreeIterator.cs" line-rate="1" branch-rate="1" complexity="13">
          <methods>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.CommonTree)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="MoveNext" signature="()" line-rate="1" branch-rate="1" complexity="11">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.TreeParser" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\TreeParser.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="SourceName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeNodeStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeNodeStream,Antlr.Runtime.RecognizerSharedState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="SetTreeNodeStream" signature="(Antlr.Runtime.Tree.ITreeNodeStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTreeNodeStream" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetCurrentInputSymbol" signature="(Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMissingSymbol" signature="(Antlr.Runtime.IIntStream,Antlr.Runtime.RecognitionException,System.Int32,Antlr.Runtime.BitSet)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchAny" signature="(Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RecoverFromMismatchedToken" signature="(Antlr.Runtime.IIntStream,System.Int32,Antlr.Runtime.BitSet)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetErrorHeader" signature="(Antlr.Runtime.RecognitionException)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetErrorMessage" signature="(Antlr.Runtime.RecognitionException,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TraceIn" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TraceOut" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.TreePatternLexer" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\TreePatternLexer.cs" line-rate="1" branch-rate="1" complexity="29">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NextToken" signature="()" line-rate="1" branch-rate="1" complexity="27">
              <lines />
            </method>
            <method name="Consume" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.TreePatternParser" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\TreePatternParser.cs" line-rate="1" branch-rate="1" complexity="28">
          <methods>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.TreePatternLexer,Antlr.Runtime.Tree.TreeWizard,Antlr.Runtime.Tree.ITreeAdaptor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pattern" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="ParseTree" signature="()" line-rate="1" branch-rate="1" complexity="10">
              <lines />
            </method>
            <method name="ParseNode" signature="()" line-rate="1" branch-rate="1" complexity="14">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.TreeRewriter" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\TreeRewriter.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeNodeStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeNodeStream,Antlr.Runtime.RecognizerSharedState)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyOnce" signature="(System.Object,Antlr.Runtime.Misc.Func`1&lt;Antlr.Runtime.IAstRuleReturnScope&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ApplyRepeatedly" signature="(System.Object,Antlr.Runtime.Misc.Func`1&lt;Antlr.Runtime.IAstRuleReturnScope&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Downup" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Downup" signature="(System.Object,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Topdown" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Bottomup" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ReportTransformation" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.TreeRuleReturnScope`1" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\TreeRuleReturnScope`1.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Start" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Start" signature="(TTree)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="r.Runtime.IRuleReturnScope.get_Start" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="r.Runtime.IRuleReturnScope&lt;TTree&gt;.get_Stop" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="r.Runtime.IRuleReturnScope.get_Stop" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.TreeVisitor" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\TreeVisitor.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Visit" signature="(System.Object,Antlr.Runtime.Tree.ITreeVisitorAction)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(System.Object,Antlr.Runtime.Misc.Func`2&lt;System.Object,System.Object&gt;,Antlr.Runtime.Misc.Func`2&lt;System.Object,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.TreeVisitorAction" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\ITreeVisitorAction.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Antlr.Runtime.Misc.Func`2&lt;System.Object,System.Object&gt;,Antlr.Runtime.Misc.Func`2&lt;System.Object,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pre" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Post" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.Tree.TreeWizard" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\Tree\TreeWizard.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.Collections.Generic.IDictionary`2&lt;System.String,System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.ITreeAdaptor,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ComputeTokenTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTokenType" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Index" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IndexCore" signature="(System.Object,System.Collections.Generic.IDictionary`2&lt;System.Int32,System.Collections.IList&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Find" signature="(System.Object,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Find" signature="(System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindFirst" signature="(System.Object,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindFirst" signature="(System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(System.Object,System.Int32,Antlr.Runtime.Tree.TreeWizard/IContextVisitor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(System.Object,System.Int32,System.Action`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VisitCore" signature="(System.Object,System.Object,System.Int32,System.Int32,Antlr.Runtime.Tree.TreeWizard/IContextVisitor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(System.Object,System.String,Antlr.Runtime.Tree.TreeWizard/IContextVisitor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parse" signature="(System.Object,System.String,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parse" signature="(System.Object,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParseCore" signature="(System.Object,Antlr.Runtime.Tree.TreeWizard/TreePattern,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object,System.Object,Antlr.Runtime.Tree.ITreeAdaptor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsCore" signature="(System.Object,System.Object,Antlr.Runtime.Tree.ITreeAdaptor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(System.Object,System.Object,System.Int32,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Action`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.IList)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.TreeWizard,Antlr.Runtime.Tree.TreeWizard/TreePattern,System.Collections.IList)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(System.Object,System.Object,System.Int32,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.Tree.TreeWizard,Antlr.Runtime.Tree.TreeWizard/IContextVisitor,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;,Antlr.Runtime.Tree.TreeWizard/TreePattern)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(System.Object,System.Object,System.Int32,System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.UnbufferedTokenStream" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\UnbufferedTokenStream.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="TokenSource" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastToken" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastRealToken" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaxLookBehind" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Antlr.Runtime.ITokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Mark" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Release" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Consume" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="NextElement" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IsEndOfFile" signature="(Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Get" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LA" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="(Antlr.Runtime.IToken,Antlr.Runtime.IToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Antlr.Runtime.UnwantedTokenException" filename="j:\dev\github\sharwell\antlrcs\Reference\antlr3\runtime\CSharp3\Sources\Antlr3.Runtime\UnwantedTokenException.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="UnexpectedToken" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,Antlr.Runtime.IIntStream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,Antlr.Runtime.IIntStream,System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,Antlr.Runtime.IIntStream,System.Collections.Generic.IList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,Antlr.Runtime.IIntStream,System.Collections.Generic.IList`1&lt;System.String&gt;,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="UnitTestProject1" line-rate="1" branch-rate="1" complexity="1">
      <classes>
        <class name="UnitTestProject1.UnitTest1" filename="C:\Users\bharath.reddy\Source\Repos\Github\coverage\coverage\UnitTestProject1\UnitTest1.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="TestMethod1" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="11" hits="1" branch="false" />
                <line number="12" hits="1" branch="false" />
                <line number="13" hits="1" branch="false" />
                <line number="14" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="11" hits="1" branch="false" />
            <line number="12" hits="1" branch="false" />
            <line number="13" hits="1" branch="false" />
            <line number="14" hits="1" branch="false" />
          </lines>
        </class>
      </classes>
    </package>
    <package name="WebApplication1" line-rate="0.06818181818181818" branch-rate="0" complexity="10">
      <classes>
        <class name="WebApplication1.BundleConfig" filename="C:\Users\bharath.reddy\Source\Repos\Github\coverage\coverage\WebApplication1\App_Start\BundleConfig.cs" line-rate="0" branch-rate="1" complexity="NaN">
          <methods>
            <method name="RegisterBundles" signature="(System.Web.Optimization.BundleCollection)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="10" hits="0" branch="false" />
                <line number="11" hits="0" branch="false" />
                <line number="12" hits="0" branch="false" />
                <line number="14" hits="0" branch="false" />
                <line number="15" hits="0" branch="false" />
                <line number="19" hits="0" branch="false" />
                <line number="20" hits="0" branch="false" />
                <line number="22" hits="0" branch="false" />
                <line number="23" hits="0" branch="false" />
                <line number="25" hits="0" branch="false" />
                <line number="26" hits="0" branch="false" />
                <line number="27" hits="0" branch="false" />
                <line number="28" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="10" hits="0" branch="false" />
            <line number="11" hits="0" branch="false" />
            <line number="12" hits="0" branch="false" />
            <line number="14" hits="0" branch="false" />
            <line number="15" hits="0" branch="false" />
            <line number="19" hits="0" branch="false" />
            <line number="20" hits="0" branch="false" />
            <line number="22" hits="0" branch="false" />
            <line number="23" hits="0" branch="false" />
            <line number="25" hits="0" branch="false" />
            <line number="26" hits="0" branch="false" />
            <line number="27" hits="0" branch="false" />
            <line number="28" hits="0" branch="false" />
          </lines>
        </class>
        <class name="WebApplication1.Controllers.HomeController" filename="C:\Users\bharath.reddy\Source\Repos\Github\coverage\coverage\WebApplication1\Controllers\HomeController.cs" line-rate="0.21428571428571427" branch-rate="0" complexity="5">
          <methods>
            <method name="Index" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="12" hits="0" branch="false" />
                <line number="13" hits="0" branch="false" />
                <line number="14" hits="0" branch="false" />
              </lines>
            </method>
            <method name="About" signature="()" line-rate="0" branch-rate="0" complexity="2">
              <lines>
                <line number="17" hits="0" branch="false" />
                <line number="18" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="20" hits="0" branch="false" />
                <line number="21" hits="0" branch="false" />
              </lines>
            </method>
            <method name="Contact" signature="()" line-rate="0" branch-rate="0" complexity="2">
              <lines>
                <line number="24" hits="0" branch="false" />
                <line number="25" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="27" hits="0" branch="false" />
                <line number="28" hits="0" branch="false" />
              </lines>
            </method>
            <method name="Add" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="31" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
                <line number="33" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="12" hits="0" branch="false" />
            <line number="13" hits="0" branch="false" />
            <line number="14" hits="0" branch="false" />
            <line number="17" hits="0" branch="false" />
            <line number="18" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="20" hits="0" branch="false" />
            <line number="21" hits="0" branch="false" />
            <line number="24" hits="0" branch="false" />
            <line number="25" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="27" hits="0" branch="false" />
            <line number="28" hits="0" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
          </lines>
        </class>
        <class name="WebApplication1.FilterConfig" filename="C:\Users\bharath.reddy\Source\Repos\Github\coverage\coverage\WebApplication1\App_Start\FilterConfig.cs" line-rate="0" branch-rate="1" complexity="NaN">
          <methods>
            <method name="RegisterGlobalFilters" signature="(System.Web.Mvc.GlobalFilterCollection)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="9" hits="0" branch="false" />
                <line number="10" hits="0" branch="false" />
                <line number="11" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="9" hits="0" branch="false" />
            <line number="10" hits="0" branch="false" />
            <line number="11" hits="0" branch="false" />
          </lines>
        </class>
        <class name="WebApplication1.MvcApplication" filename="C:\Users\bharath.reddy\Source\Repos\Github\coverage\coverage\WebApplication1\Global.asax.cs" line-rate="0" branch-rate="1" complexity="1">
          <methods>
            <method name="Application_Start" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="14" hits="0" branch="false" />
                <line number="15" hits="0" branch="false" />
                <line number="16" hits="0" branch="false" />
                <line number="17" hits="0" branch="false" />
                <line number="18" hits="0" branch="false" />
                <line number="19" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="14" hits="0" branch="false" />
            <line number="15" hits="0" branch="false" />
            <line number="16" hits="0" branch="false" />
            <line number="17" hits="0" branch="false" />
            <line number="18" hits="0" branch="false" />
            <line number="19" hits="0" branch="false" />
          </lines>
        </class>
        <class name="WebApplication1.RouteConfig" filename="C:\Users\bharath.reddy\Source\Repos\Github\coverage\coverage\WebApplication1\App_Start\RouteConfig.cs" line-rate="0" branch-rate="1" complexity="NaN">
          <methods>
            <method name="RegisterRoutes" signature="(System.Web.Routing.RouteCollection)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="13" hits="0" branch="false" />
                <line number="14" hits="0" branch="false" />
                <line number="16" hits="0" branch="false" />
                <line number="17" hits="0" branch="false" />
                <line number="18" hits="0" branch="false" />
                <line number="19" hits="0" branch="false" />
                <line number="20" hits="0" branch="false" />
                <line number="21" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="13" hits="0" branch="false" />
            <line number="14" hits="0" branch="false" />
            <line number="16" hits="0" branch="false" />
            <line number="17" hits="0" branch="false" />
            <line number="18" hits="0" branch="false" />
            <line number="19" hits="0" branch="false" />
            <line number="20" hits="0" branch="false" />
            <line number="21" hits="0" branch="false" />
          </lines>
        </class>
      </classes>
    </package>
    <package name="xunit.assert" line-rate="0.019337016574585635" branch-rate="0.00967741935483871" complexity="501">
      <classes>
        <class name="Xunit.Assert" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Assert.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReferenceEquals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Assert" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\BooleanAsserts.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="False" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="False" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="False" signature="(System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="False" signature="(System.Nullable`1&lt;System.Boolean&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="True" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="True" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="True" signature="(System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="True" signature="(System.Nullable`1&lt;System.Boolean&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Assert" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\CollectionAsserts.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="All" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Collection" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Action`1&lt;T&gt;[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(T,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(T,System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Predicate`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(TKey,System.Collections.Generic.IReadOnlyDictionary`2&lt;TKey,TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(TKey,System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotContain" signature="(T,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotContain" signature="(T,System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotContain" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Predicate`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotContain" signature="(TKey,System.Collections.Generic.IReadOnlyDictionary`2&lt;TKey,TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotContain" signature="(TKey,System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Empty" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotEmpty" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotEqual" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotEqual" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Single" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Single" signature="(System.Collections.IEnumerable,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Single" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Single" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Predicate`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Assert" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Comparers.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="GetComparer" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetEqualityComparer" signature="(System.Collections.IEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Assert" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\EqualityAsserts.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Equal" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(T,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Double,System.Double,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Decimal,System.Decimal,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.DateTime,System.DateTime,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StrictEqual" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotEqual" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotEqual" signature="(T,T,System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotEqual" signature="(System.Double,System.Double,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotEqual" signature="(System.Decimal,System.Decimal,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotStrictEqual" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Assert" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\EventAsserts.cs" line-rate="1" branch-rate="1" complexity="12">
          <methods>
            <method name="Raises" signature="(System.Action`1&lt;System.EventHandler`1&lt;T&gt;&gt;,System.Action`1&lt;System.EventHandler`1&lt;T&gt;&gt;,System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RaisesAny" signature="(System.Action`1&lt;System.EventHandler`1&lt;T&gt;&gt;,System.Action`1&lt;System.EventHandler`1&lt;T&gt;&gt;,System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RaisesInternal" signature="(System.Action`1&lt;System.EventHandler`1&lt;T&gt;&gt;,System.Action`1&lt;System.EventHandler`1&lt;T&gt;&gt;,System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Sender" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Arguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RaisesAsync" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="RaisesAnyAsync" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="RaisesAsyncInternal" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Assert" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\ExceptionAsserts.cs" line-rate="1" branch-rate="1" complexity="12">
          <methods>
            <method name="Throws" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Func`1&lt;System.Threading.Tasks.Task&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAny" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAny" signature="(System.Func`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Type,System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Type,System.Func`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.Type,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAny" signature="(System.Type,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.String,System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.String,System.Func`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throws" signature="(System.String,System.Func`1&lt;System.Threading.Tasks.Task&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ThrowsAnyAsync" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ThrowsAsync" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Assert" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Guards.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GuardArgumentNotNull" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Assert" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\IdentityAsserts.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="NotSame" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Same" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Assert" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\NullAsserts.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="NotNull" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Null" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Assert" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\PropertyAsserts.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="PropertyChanged" signature="(System.ComponentModel.INotifyPropertyChanged,System.String,System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PropertyChanged" signature="(System.ComponentModel.INotifyPropertyChanged,System.String,System.Func`1&lt;System.Threading.Tasks.Task&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PropertyChangedAsync" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Assert" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\RangeAsserts.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="InRange" signature="(T,T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InRange" signature="(T,T,T,System.Collections.Generic.IComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotInRange" signature="(T,T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotInRange" signature="(T,T,T,System.Collections.Generic.IComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Assert" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Record.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="RecordException" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RecordException" signature="(System.Func`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RecordException" signature="(System.Func`1&lt;System.Threading.Tasks.Task&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RecordExceptionAsync" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Assert" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\SetAsserts.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ProperSubset" signature="(System.Collections.Generic.ISet`1&lt;T&gt;,System.Collections.Generic.ISet`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ProperSuperset" signature="(System.Collections.Generic.ISet`1&lt;T&gt;,System.Collections.Generic.ISet`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Subset" signature="(System.Collections.Generic.ISet`1&lt;T&gt;,System.Collections.Generic.ISet`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Superset" signature="(System.Collections.Generic.ISet`1&lt;T&gt;,System.Collections.Generic.ISet`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Assert" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\StringAsserts.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Contains" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.String,System.String,System.StringComparison)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotContain" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotContain" signature="(System.String,System.String,System.StringComparison)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartsWith" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartsWith" signature="(System.String,System.String,System.StringComparison)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndsWith" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndsWith" signature="(System.String,System.String,System.StringComparison)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Matches" signature="(System.Text.RegularExpressions.Regex,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotMatch" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoesNotMatch" signature="(System.Text.RegularExpressions.Regex,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsLineEnding" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsWhiteSpace" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipLineEnding" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipWhitespace" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Assert" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\TypeAsserts.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsAssignableFrom" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssignableFrom" signature="(System.Type,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotType" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNotType" signature="(System.Type,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsType" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsType" signature="(System.Type,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.AllException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\AllException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Failures" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Tuple`3&lt;System.Int32,System.Object,System.Exception&gt;[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ArgumentFormatter" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\ArgumentFormatter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Format" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatComplexValue" signature="(System.Object,System.Int32,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatEnumerable" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatTypeName" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WrapAndGetFormattedValue" signature="(System.Func`1&lt;System.Object&gt;,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnwrapException" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EscapeHexChars" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetEscapeSequence" signature="(System.Char,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.AssertActualExpectedException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\AssertActualExpectedException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Actual" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Actual" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ActualTitle" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ActualTitle" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expected" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expected" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectedTitle" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectedTitle" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object,System.String,System.String,System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertToSimpleTypeName" signature="(System.Reflection.TypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertToString" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.AssertCollectionCountException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\AssertCollectionCountException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.AssertComparer`1" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\AssertComparer.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Compare" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.AssertEqualityComparer`1" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\AssertEqualityComparer.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Collections.IEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckIfEnumerablesAreEqual" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckIfDictionariesAreEqual" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckIfSetsAreEqual" signature="(T,T,System.Reflection.TypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompareTypedSets" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSet" signature="(System.Reflection.TypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.IEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsGeneric" signature="(U,U)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.AssertEqualityComparerAdapter`1" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\AssertEqualityComparerAdapter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.CollectionException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\CollectionException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Collection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Collection" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ActualCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ActualCount" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectedCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectedCount" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IndexFailurePoint" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IndexFailurePoint" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Int32,System.Int32,System.Int32,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatInnerException" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ContainsException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\ContainsException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.DoesNotContainException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\DoesNotContainException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.DoesNotMatchException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\DoesNotMatchException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.EmptyException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\EmptyException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Collection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.EndsWithException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\EndsWithException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShortenExpected" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShortenActual" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.EqualException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\EqualException.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="ActualIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ActualIndex" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectedIndex" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectedIndex" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessage" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="ShortenAndEncode" signature="(System.String,System.Int32,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.FalseException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\FalseException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.InRangeException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\InRangeException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Actual" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="High" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Low" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.IsAssignableFromException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\IsAssignableFromException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Type,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.IsNotTypeException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\IsNotTypeException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Type,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.IsTypeException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\IsTypeException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.MatchesException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\MatchesException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.NotEmptyException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\NotEmptyException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.NotEqualException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\NotEqualException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.NotInRangeException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\NotInRangeException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Actual" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="High" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Low" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.NotNullException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\NotNullException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.NotSameException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\NotSameException.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.NullException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\NullException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ProperSubsetException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\ProperSubsetException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ProperSupersetException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\ProperSupersetException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.PropertyChangedException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\PropertyChangedException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.RaisesException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\RaisesException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Actual" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expected" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertToSimpleTypeName" signature="(System.Reflection.TypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.SameException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\SameException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.SingleException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\SingleException.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Empty" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="MoreThanOne" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.StartsWithException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\StartsWithException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShortenActual" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.SubsetException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\SubsetException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.SupersetException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\SupersetException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ThrowsException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\ThrowsException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="StackTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type,System.String,System.String,System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TrueException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\TrueException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitException" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\Exceptions\XunitException.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="StackTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UserMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UserMessage" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="xunit.core" line-rate="0.053742802303262956" branch-rate="0.009554140127388535" complexity="257">
      <classes>
        <class name="ExceptionExtensions" filename="C:\Dev\xunit\xunit\src\common\ExceptionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="RethrowWithNoStackTraceLoss" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unwrap" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Guard" filename="C:\Dev\xunit\xunit\src\common\Guard.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ArgumentNotNull" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentNotNullOrEmpty" signature="(System.String,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentValid" signature="(System.String,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AssemblyTraitAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\AssemblyTraitAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ClassDataAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\ClassDataAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Class" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Class" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetData" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.CollectionAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\CollectionAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.CollectionBehaviorAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\CollectionBehaviorAttribute.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="DisableTestParallelization" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableTestParallelization" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaxParallelThreads" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaxParallelThreads" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.CollectionBehavior)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.CollectionDefinitionAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\CollectionDefinitionAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisableParallelization" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableParallelization" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Extensions.PropertyDataAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\Extensions\PropertyDataAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="PropertyType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PropertyType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.FactAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\FactAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Skip" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Skip" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Timeout" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Timeout" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.InlineDataAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\InlineDataAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetData" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.MemberDataAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\MemberDataAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertDataItem" signature="(System.Reflection.MethodInfo,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.MemberDataAttributeBase" filename="C:\Dev\xunit\xunit\src\xunit.core\MemberDataAttributeBase.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisableDiscoveryEnumeration" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableDiscoveryEnumeration" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MemberName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MemberName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MemberType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MemberType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parameters" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parameters" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetData" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFieldAccessor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodAccessor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPropertyAccessor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParameterTypesCompatible" signature="(System.Reflection.ParameterInfo[],System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Record" filename="C:\Dev\xunit\xunit\src\xunit.core\Record.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="Exception" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exception" signature="(System.Func`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exception" signature="(System.Func`1&lt;System.Threading.Tasks.Task&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GuardArgumentNotNull" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionAsync" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ArgumentFormatter" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\ArgumentFormatter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Format" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatComplexValue" signature="(System.Object,System.Int32,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatEnumerable" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatTypeName" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WrapAndGetFormattedValue" signature="(System.Func`1&lt;System.Object&gt;,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnwrapException" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EscapeHexChars" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetEscapeSequence" signature="(System.Char,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.AssemblyTraitDiscoverer" filename="C:\Dev\xunit\xunit\src\xunit.core\Sdk\AssemblyTraitDiscoverer.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="GetTraits" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.AssertEqualityComparer`1" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\AssertEqualityComparer.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Collections.IEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckIfEnumerablesAreEqual" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckIfDictionariesAreEqual" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckIfSetsAreEqual" signature="(T,T,System.Reflection.TypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompareTypedSets" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSet" signature="(System.Reflection.TypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.IEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsGeneric" signature="(U,U)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.AssertEqualityComparerAdapter`1" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\AssertEqualityComparerAdapter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.BeforeAfterTestAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\Sdk\BeforeAfterTestAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="After" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Before" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.DataAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\Sdk\DataAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Skip" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Skip" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.DataDiscoverer" filename="C:\Dev\xunit\xunit\src\xunit.core\Sdk\DataDiscoverer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetData" signature="(Xunit.Abstractions.IAttributeInfo,Xunit.Abstractions.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SupportsDiscoveryEnumeration" signature="(Xunit.Abstractions.IAttributeInfo,Xunit.Abstractions.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.DataDiscovererAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\Sdk\DataDiscovererAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ExceptionAggregator" filename="C:\Dev\xunit\xunit\src\xunit.core\Sdk\ExceptionAggregator.cs" line-rate="1" branch-rate="1" complexity="11">
          <methods>
            <method name="HasExceptions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Sdk.ExceptionAggregator)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Aggregate" signature="(Xunit.Sdk.ExceptionAggregator)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Run" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToException" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="RunAsync" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="RunAsync" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.InlineDataDiscoverer" filename="C:\Dev\xunit\xunit\src\xunit.core\Sdk\InlineDataDiscoverer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetData" signature="(Xunit.Abstractions.IAttributeInfo,Xunit.Abstractions.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SupportsDiscoveryEnumeration" signature="(Xunit.Abstractions.IAttributeInfo,Xunit.Abstractions.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.MemberDataDiscoverer" filename="C:\Dev\xunit\xunit\src\xunit.core\Sdk\MemberDataDiscoverer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="SupportsDiscoveryEnumeration" signature="(Xunit.Abstractions.IAttributeInfo,Xunit.Abstractions.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.RunSummary" filename="C:\Dev\xunit\xunit\src\xunit.core\Sdk\RunSummary.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Aggregate" signature="(Xunit.Sdk.RunSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestFrameworkDiscovererAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\Sdk\TestFrameworkDiscovererAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TraitDiscoverer" filename="C:\Dev\xunit\xunit\src\xunit.core\Sdk\TraitDiscoverer.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="GetTraits" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TraitDiscovererAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\Sdk\TraitDiscovererAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitTestCaseDiscovererAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\Sdk\XunitTestCaseDiscovererAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCaseOrdererAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\TestCaseOrdererAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCollectionOrdererAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\TestCollectionOrdererAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestFrameworkAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\TestFrameworkAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TheoryData" filename="C:\Dev\xunit\xunit\src\xunit.core\TheoryData.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="AddRow" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TheoryData`1" filename="C:\Dev\xunit\xunit\src\xunit.core\TheoryData.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Add" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TheoryData`10" filename="C:\Dev\xunit\xunit\src\xunit.core\TheoryData.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Add" signature="(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TheoryData`2" filename="C:\Dev\xunit\xunit\src\xunit.core\TheoryData.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Add" signature="(T1,T2)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TheoryData`3" filename="C:\Dev\xunit\xunit\src\xunit.core\TheoryData.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Add" signature="(T1,T2,T3)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TheoryData`4" filename="C:\Dev\xunit\xunit\src\xunit.core\TheoryData.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Add" signature="(T1,T2,T3,T4)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TheoryData`5" filename="C:\Dev\xunit\xunit\src\xunit.core\TheoryData.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Add" signature="(T1,T2,T3,T4,T5)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TheoryData`6" filename="C:\Dev\xunit\xunit\src\xunit.core\TheoryData.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Add" signature="(T1,T2,T3,T4,T5,T6)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TheoryData`7" filename="C:\Dev\xunit\xunit\src\xunit.core\TheoryData.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Add" signature="(T1,T2,T3,T4,T5,T6,T7)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TheoryData`8" filename="C:\Dev\xunit\xunit\src\xunit.core\TheoryData.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Add" signature="(T1,T2,T3,T4,T5,T6,T7,T8)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TheoryData`9" filename="C:\Dev\xunit\xunit\src\xunit.core\TheoryData.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Add" signature="(T1,T2,T3,T4,T5,T6,T7,T8,T9)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TraitAttribute" filename="C:\Dev\xunit\xunit\src\xunit.core\TraitAttribute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="xunit.execution.desktop" line-rate="0.39645254074784275" branch-rate="0.21841541755888652" complexity="1722">
      <classes>
        <class name="AssemblyExtensions" filename="C:\Dev\xunit\xunit\src\common\AssemblyExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetLocalCodeBase" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetLocalCodeBase" signature="(System.String,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommonTasks" filename="C:\Dev\xunit\xunit\src\common\CommonTasks.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="DictionaryExtensions" filename="C:\Dev\xunit\xunit\src\common\DictionaryExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Add" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,System.Collections.Generic.List`1&lt;TValue&gt;&gt;,TKey,TValue)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,System.Collections.Generic.List`1&lt;TValue&gt;&gt;,TKey,TValue,System.Collections.Generic.IEqualityComparer`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetOrAdd" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;,TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetOrAdd" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;,TKey,System.Func`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToDictionaryIgnoringDuplicateKeys" signature="(System.Collections.Generic.IEnumerable`1&lt;TValue&gt;,System.Func`2&lt;TValue,TKey&gt;,System.Collections.Generic.IEqualityComparer`1&lt;TKey&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToDictionaryIgnoringDuplicateKeys" signature="(System.Collections.Generic.IEnumerable`1&lt;TInput&gt;,System.Func`2&lt;TInput,TKey&gt;,System.Func`2&lt;TInput,TValue&gt;,System.Collections.Generic.IEqualityComparer`1&lt;TKey&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="ExceptionExtensions" filename="C:\Dev\xunit\xunit\src\common\ExceptionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="RethrowWithNoStackTraceLoss" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unwrap" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Guard" filename="C:\Dev\xunit\xunit\src\common\Guard.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ArgumentNotNull" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentNotNullOrEmpty" signature="(System.String,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentValid" signature="(System.String,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NewReflectionExtensions" filename="C:\Dev\xunit\xunit\src\common\NewReflectionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetAssembly" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnum" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFromLocalAssembly" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsGenericType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsGenericTypeDefinition" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNullableEnum" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsValueType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnwrapNullable" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetGenericArguments" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInterfaces" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssignableFrom" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="ReflectionAbstractionExtensions" filename="C:\Dev\xunit\xunit\src\xunit.execution\Extensions\ReflectionAbstractionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CreateTestClass" signature="(Xunit.Abstractions.ITest,System.Type,System.Object[],Xunit.Sdk.IMessageBus,Xunit.Sdk.ExecutionTimer,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisposeTestClass" signature="(Xunit.Abstractions.ITest,System.Object,Xunit.Sdk.IMessageBus,Xunit.Sdk.ExecutionTimer,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodInfoFromIMethodInfo" signature="(System.Type,Xunit.Abstractions.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMatchingMethods" signature="(System.Type,System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(Xunit.Abstractions.IAssemblyInfo,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(Xunit.Abstractions.IAttributeInfo,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(Xunit.Abstractions.IMethodInfo,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(Xunit.Abstractions.ITypeInfo,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToRuntimeMethod" signature="(Xunit.Abstractions.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToRuntimeType" signature="(Xunit.Abstractions.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="TestFrameworkOptionsReadExtensions" filename="C:\Dev\xunit\xunit\src\xunit.execution\Extensions\TestFrameworkOptionsReadExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessagesOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDisplay" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDisplayOptions" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDisplayOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDisplayOptionsOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PreEnumerateTheories" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PreEnumerateTheoriesOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SynchronousMessageReporting" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SynchronousMessageReportingOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessagesOrDefault" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableParallelization" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableParallelizationOrDefault" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaxParallelThreads" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaxParallelThreadsOrDefault" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopOnTestFail" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopOnTestFailOrDefault" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SynchronousMessageReporting" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SynchronousMessageReportingOrDefault" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="TestOptionsNames" filename="C:\Dev\xunit\xunit\src\common\TestOptionsNames.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ExecutionHelper" filename="C:\Dev\xunit\xunit\src\common\ExecutionHelper.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="PlatformSuffix" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.LongLivedMarshalByRefObject" filename="C:\Dev\xunit\xunit\src\common\LongLivedMarshalByRefObject.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="DisconnectAll" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="InitializeLifetimeService" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.AfterTestFinished" filename="C:\Dev\xunit\xunit\src\messages\AfterTestFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AttributeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AttributeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.AfterTestStarting" filename="C:\Dev\xunit\xunit\src\messages\AfterTestStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AttributeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AttributeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ArgumentFormatter" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\ArgumentFormatter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Format" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatComplexValue" signature="(System.Object,System.Int32,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatEnumerable" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatTypeName" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WrapAndGetFormattedValue" signature="(System.Func`1&lt;System.Object&gt;,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnwrapException" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EscapeHexChars" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryGetEscapeSequence" signature="(System.Char,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.AssertEqualityComparer`1" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\AssertEqualityComparer.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Collections.IEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckIfEnumerablesAreEqual" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckIfDictionariesAreEqual" signature="(T,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CheckIfSetsAreEqual" signature="(T,T,System.Reflection.TypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompareTypedSets" signature="(System.Collections.IEnumerable,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSet" signature="(System.Reflection.TypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.IEqualityComparer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EqualsGeneric" signature="(U,U)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.AssertEqualityComparerAdapter`1" filename="C:\Dev\xunit\xunit\src\xunit.assert\Asserts\Sdk\AssertEqualityComparerAdapter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.AsyncManualResetEvent" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Utility\AsyncManualResetEvent.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="IsSet" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WaitAsync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Set" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.AsyncTestSyncContext" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\AsyncTestSyncContext.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name=".ctor" signature="(System.Threading.SynchronizationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OperationCompleted" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="OperationStarted" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Post" signature="(System.Threading.SendOrPostCallback,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Send" signature="(System.Threading.SendOrPostCallback,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WaitForCompletionAsync" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.BeforeTestFinished" filename="C:\Dev\xunit\xunit\src\messages\BeforeTestFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AttributeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AttributeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.BeforeTestStarting" filename="C:\Dev\xunit\xunit\src\messages\BeforeTestStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AttributeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AttributeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.CollectionExtensions" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Utility\CollectionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CastOrToList" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CastOrToArray" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.CollectionPerAssemblyTestCollectionFactory" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\CollectionPerAssemblyTestCollectionFactory.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestAssembly,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestCollection" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Get" signature="(Xunit.Abstractions.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.CollectionPerClassTestCollectionFactory" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\CollectionPerClassTestCollectionFactory.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestAssembly,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateCollection" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Get" signature="(Xunit.Abstractions.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.DefaultTestCaseOrderer" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\DefaultTestCaseOrderer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OrderTestCases" signature="(System.Collections.Generic.IEnumerable`1&lt;TTestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Randomize" signature="(System.Collections.Generic.List`1&lt;TTestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Compare" signature="(TTestCase,TTestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.DefaultTestCollectionOrderer" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\DefaultTestCollectionOrderer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="OrderTestCollections" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCollection&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Compare" signature="(TTestCollection,TTestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.DelegatingMessageBus" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Messages\DelegatingMessageBus.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(Xunit.Sdk.IMessageBus,System.Action`1&lt;Xunit.Abstractions.IMessageSinkMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="QueueMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.DelegatingMessageBus`1" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Messages\DelegatingMessageBus.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="FinalMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FinalMessage" signature="(TFinalMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="(System.Threading.ManualResetEvent)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Sdk.IMessageBus,System.Action`1&lt;Xunit.Abstractions.IMessageSinkMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="QueueMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.DelegatingMessageSink" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Messages\DelegatingMessageSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink,System.Action`1&lt;Xunit.Abstractions.IMessageSinkMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.DelegatingMessageSink`1" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Messages\DelegatingMessageSink.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="FinalMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FinalMessage" signature="(TFinalMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="(System.Threading.ManualResetEvent)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink,System.Action`1&lt;Xunit.Abstractions.IMessageSinkMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.DiagnosticMessage" filename="C:\Dev\xunit\xunit\src\messages\DiagnosticMessage.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="InterfaceTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.DisplayNameFormatter" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\DisplayNameFormatter.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Sdk.TestMethodDisplay,Xunit.Sdk.TestMethodDisplayOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormattedDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Buffer" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasMoreText" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadNext" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Flush" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Next" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Next" signature="(Xunit.Sdk.DisplayNameFormatter/CharacterRule)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Evaluate" signature="(Xunit.Sdk.DisplayNameFormatter/FormatContext,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Evaluate" signature="(Xunit.Sdk.DisplayNameFormatter/FormatContext,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryConsumeMoniker" signature="(Xunit.Sdk.DisplayNameFormatter/FormatContext,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Evaluate" signature="(Xunit.Sdk.DisplayNameFormatter/FormatContext,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Evaluate" signature="(Xunit.Sdk.DisplayNameFormatter/FormatContext,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryConsumeEscapeSequence" signature="(Xunit.Sdk.DisplayNameFormatter/FormatContext,System.Char,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsHex" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HexToInt32" signature="(System.Char[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Evaluate" signature="(Xunit.Sdk.DisplayNameFormatter/FormatContext,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Evaluate" signature="(Xunit.Sdk.DisplayNameFormatter/FormatContext,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.DisposalTracker" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\DisposalTracker.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Add" signature="(System.IDisposable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ErrorMessage" filename="C:\Dev\xunit\xunit\src\messages\ErrorMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ExceptionUtility" filename="C:\Dev\xunit\xunit\src\common\ExceptionUtility.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CombineMessages" signature="(Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CombineStackTraces" signature="(Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExcludeStackFrame" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterStackTrace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAt" signature="(System.String[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAt" signature="(System.Int32[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMessage" signature="(Xunit.Abstractions.IFailureInformation,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNamespace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStackTrace" signature="(Xunit.Abstractions.IFailureInformation,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertExceptionToFailureInformation" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertExceptionToFailureInformation" signature="(System.Exception,System.Int32,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SplitLines" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ExecutionContextHelper" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Utility\ExecutionContextHelper.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="IsSupported" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Capture" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Run" signature="(System.Object,System.Action`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ExecutionErrorTestCase" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\ExecutionErrorTestCase.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ErrorMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ErrorMessage" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink,Xunit.Sdk.TestMethodDisplay,Xunit.Abstractions.ITestMethod,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink,Xunit.Sdk.TestMethodDisplay,Xunit.Sdk.TestMethodDisplayOptions,Xunit.Abstractions.ITestMethod,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunAsync" signature="(Xunit.Abstractions.IMessageSink,Xunit.Sdk.IMessageBus,System.Object[],Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ExecutionErrorTestCaseRunner" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\Runners\ExecutionErrorTestCaseRunner.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name=".ctor" signature="(Xunit.Sdk.ExecutionErrorTestCase,Xunit.Sdk.IMessageBus,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestAsync" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ExecutionTimer" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\ExecutionTimer.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="Total" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Aggregate" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Aggregate" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AggregateAsync" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ExtensibilityPointFactory" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\ExtensibilityPointFactory.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="CreateInstance" signature="(Xunit.Abstractions.IMessageSink,System.Type,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Get" signature="(Xunit.Abstractions.IMessageSink,System.Type,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDataDiscoverer" signature="(Xunit.Abstractions.IMessageSink,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDataDiscoverer" signature="(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.IAttributeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCaseOrderer" signature="(Xunit.Abstractions.IMessageSink,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCaseOrderer" signature="(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.IAttributeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCollectionOrderer" signature="(Xunit.Abstractions.IMessageSink,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCollectionOrderer" signature="(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.IAttributeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestFrameworkTypeDiscoverer" signature="(Xunit.Abstractions.IMessageSink,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestFrameworkTypeDiscoverer" signature="(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.IAttributeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTraitDiscoverer" signature="(Xunit.Abstractions.IMessageSink,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTraitDiscoverer" signature="(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.IAttributeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetXunitTestCaseDiscoverer" signature="(Xunit.Abstractions.IMessageSink,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetXunitTestCollectionFactory" signature="(Xunit.Abstractions.IMessageSink,System.Type,Xunit.Abstractions.ITestAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetXunitTestCollectionFactory" signature="(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.IAttributeInfo,Xunit.Abstractions.ITestAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCollectionFactoryType" signature="(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.IAttributeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.FactDiscoverer" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\FactDiscoverer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DiagnosticMessageSink" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestCase" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Discover" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.GeneralDigest" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Utility\Sha1Digest.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Sdk.GeneralDigest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CopyIn" signature="(Xunit.Sdk.GeneralDigest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Update" signature="(System.Byte)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BlockUpdate" signature="(System.Byte[],System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finish" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetByteLength" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.MaxConcurrencySyncContext" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\MaxConcurrencySyncContext.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="IsSupported" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Post" signature="(System.Threading.SendOrPostCallback,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Send" signature="(System.Threading.SendOrPostCallback,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WorkerThreadProc" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunOnSyncContext" signature="(System.Threading.SendOrPostCallback,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.MessageBus" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\MessageBus.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DispatchMessages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="QueueMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReporterWorker" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.NullMessageSink" filename="C:\Dev\xunit\xunit\src\common\NullMessageSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.Pack" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Utility\Sha1Digest.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="UInt16_To_BE" signature="(System.UInt16,System.Byte[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt16_To_BE" signature="(System.UInt16,System.Byte[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BE_To_UInt16" signature="(System.Byte[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BE_To_UInt16" signature="(System.Byte[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt32_To_BE" signature="(System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt32_To_BE" signature="(System.UInt32,System.Byte[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt32_To_BE" signature="(System.UInt32,System.Byte[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt32_To_BE" signature="(System.UInt32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt32_To_BE" signature="(System.UInt32[],System.Byte[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BE_To_UInt32" signature="(System.Byte[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BE_To_UInt32" signature="(System.Byte[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BE_To_UInt32" signature="(System.Byte[],System.Int32,System.UInt32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt64_To_BE" signature="(System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt64_To_BE" signature="(System.UInt64,System.Byte[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt64_To_BE" signature="(System.UInt64,System.Byte[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BE_To_UInt64" signature="(System.Byte[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BE_To_UInt64" signature="(System.Byte[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt16_To_LE" signature="(System.UInt16,System.Byte[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt16_To_LE" signature="(System.UInt16,System.Byte[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LE_To_UInt16" signature="(System.Byte[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LE_To_UInt16" signature="(System.Byte[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt32_To_LE" signature="(System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt32_To_LE" signature="(System.UInt32,System.Byte[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt32_To_LE" signature="(System.UInt32,System.Byte[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt32_To_LE" signature="(System.UInt32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt32_To_LE" signature="(System.UInt32[],System.Byte[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LE_To_UInt32" signature="(System.Byte[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LE_To_UInt32" signature="(System.Byte[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LE_To_UInt32" signature="(System.Byte[],System.Int32,System.UInt32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LE_To_UInt32" signature="(System.Byte[],System.Int32,System.UInt32[],System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt64_To_LE" signature="(System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt64_To_LE" signature="(System.UInt64,System.Byte[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UInt64_To_LE" signature="(System.UInt64,System.Byte[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LE_To_UInt64" signature="(System.Byte[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LE_To_UInt64" signature="(System.Byte[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ReflectionAssemblyInfo" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Reflection\ReflectionAssemblyInfo.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assembly" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyPath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetType" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTypes" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ReflectionAttributeInfo" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Reflection\ReflectionAttributeInfo.cs" line-rate="1" branch-rate="1" complexity="14">
          <methods>
            <method name="Attribute" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Attribute" signature="(System.Attribute)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AttributeData" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AttributeData" signature="(System.Reflection.CustomAttributeData)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.CustomAttributeData)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAttributeUsage" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetConstructorArguments" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Type,System.Type,System.AttributeUsageAttribute)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNamedArgument" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Instantiate" signature="(System.Reflection.CustomAttributeData)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTypedValue" signature="(System.Reflection.CustomAttributeTypedArgument)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Convert" signature="()" line-rate="1" branch-rate="1" complexity="11">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ReflectionAttributeNameCache" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Reflection\ReflectionAttributeNameCache.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="GetType" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ReflectionMethodInfo" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Reflection\ReflectionMethodInfo.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="IsAbstract" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsGenericMethodDefinition" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsPublic" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsStatic" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodInfo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodInfo" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Reflection.MethodInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Reflection.MethodInfo,System.Type,System.AttributeUsageAttribute)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetGenericArguments" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetParent" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParametersHaveSameTypes" signature="(System.Reflection.ParameterInfo[],System.Reflection.ParameterInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MakeGenericMethod" signature="(Xunit.Abstractions.ITypeInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetParameters" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="System.Collections.IEqualityComparer.Equals" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="System.Collections.IEqualityComparer.GetHashCode" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ReflectionParameterInfo" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Reflection\ReflectionParameterInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParameterInfo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParameterInfo" signature="(System.Reflection.ParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParameterType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.ParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.ReflectionTypeInfo" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Reflection\ReflectionTypeInfo.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BaseType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Interfaces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAbstract" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsGenericParameter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsGenericType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSealed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsValueType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetGenericArguments" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetMethod" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethods" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.Reflector" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Reflection\Reflector.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ConvertArguments" signature="(System.Object[],System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertArgument" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Wrap" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Wrap" signature="(System.Reflection.CustomAttributeData)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Wrap" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Wrap" signature="(System.Reflection.ParameterInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Wrap" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.SerializationHelper" filename="C:\Dev\xunit\xunit\src\common\SerializationHelper.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Deserialize" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSerializable" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetType" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetType" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTypeNameForSerialization" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubstringTrim" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SplitAtOuterCommas" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.Sha1Digest" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Utility\Sha1Digest.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="AlgorithmName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Sdk.Sha1Digest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CopyIn" signature="(Xunit.Sdk.Sha1Digest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDigestSize" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ProcessWord" signature="(System.Byte[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ProcessLength" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoFinal" signature="(System.Byte[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="F" signature="(System.UInt32,System.UInt32,System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="H" signature="(System.UInt32,System.UInt32,System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="G" signature="(System.UInt32,System.UInt32,System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ProcessBlock" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="Reset" signature="(Xunit.Sdk.Sha1Digest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.SourceInformation" filename="C:\Dev\xunit\xunit\src\common\SourceInformation.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="FileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LineNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LineNumber" signature="(System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.SynchronousMessageBus" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\SynchronousMessageBus.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="QueueMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestAssembly" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\TestAssembly.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assembly" signature="(Xunit.Abstractions.IAssemblyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfigFileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfigFileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Version" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Version" signature="(System.Version)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IAssemblyInfo,System.String,System.Version)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestAssemblyCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestAssemblyCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestAssembly,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestAssembly,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestAssemblyFinished" filename="C:\Dev\xunit\xunit\src\messages\TestAssemblyFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestAssembly,System.Decimal,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestAssemblyMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestAssemblyMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestAssembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestAssembly" signature="(Xunit.Abstractions.ITestAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,Xunit.Abstractions.ITestAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestAssemblyRunner`1" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\Runners\TestAssemblyRunner.cs" line-rate="1" branch-rate="1" complexity="33">
          <methods>
            <method name="Aggregator" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Aggregator" signature="(Xunit.Sdk.ExceptionAggregator)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionOptions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionOptions" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessageSink" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessageSink" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionMessageSink" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionMessageSink" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestAssembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestAssembly" signature="(Xunit.Abstractions.ITestAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCaseOrderer" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCaseOrderer" signature="(Xunit.Sdk.ITestCaseOrderer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCollectionOrderer" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCollectionOrderer" signature="(Xunit.ITestCollectionOrderer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="(System.Collections.Generic.IEnumerable`1&lt;TTestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestAssembly,System.Collections.Generic.IEnumerable`1&lt;TTestCase&gt;,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetTestFrameworkEnvironment" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetVersion" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="AfterTestAssemblyStartingAsync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="BeforeTestAssemblyFinishedAsync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CreateMessageBus" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="OrderTestCollections" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="RunAsync" signature="()" line-rate="1" branch-rate="1" complexity="14">
              <lines />
            </method>
            <method name="RunTestCollectionsAsync" signature="()" line-rate="1" branch-rate="1" complexity="7">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestAssemblyStarting" filename="C:\Dev\xunit\xunit\src\messages\TestAssemblyStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="StartTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartTime" signature="(System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestEnvironment" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestEnvironment" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkDisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestAssembly,System.DateTime,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCaseBulkDeserializer" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\TestCaseBulkDeserializer.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Object,System.Object,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.ITestFrameworkDiscoverer,Xunit.Abstractions.ITestFrameworkExecutor,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCaseCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestCaseCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCaseDescriptorFactory" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\TestCaseDescriptorFactory.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Object,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Encode" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCaseDiscoveryMessage" filename="C:\Dev\xunit\xunit\src\messages\TestCaseDiscoveryMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCaseFinished" filename="C:\Dev\xunit\xunit\src\messages\TestCaseFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,System.Decimal,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCaseMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestCaseMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCaseRunner`1" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\Runners\TestCaseRunner.cs" line-rate="1" branch-rate="1" complexity="15">
          <methods>
            <method name="Aggregator" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Aggregator" signature="(Xunit.Sdk.ExceptionAggregator)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CancellationTokenSource" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CancellationTokenSource" signature="(System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MessageBus" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MessageBus" signature="(Xunit.Sdk.IMessageBus)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCase" signature="(TTestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(TTestCase,Xunit.Sdk.IMessageBus,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AfterTestCaseStartingAsync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="BeforeTestCaseFinishedAsync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RunAsync" signature="()" line-rate="1" branch-rate="1" complexity="13">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCaseStarting" filename="C:\Dev\xunit\xunit\src\messages\TestCaseStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestClass" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\TestClass.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Class" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Class" signature="(Xunit.Abstractions.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCollection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCollection" signature="(Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCollection,Xunit.Abstractions.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestClassCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestClassCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestClass,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestClass,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestClassComparer" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\TestClassComparer.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Equals" signature="(Xunit.Abstractions.ITestClass,Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="(Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestClassConstructionFinished" filename="C:\Dev\xunit\xunit\src\messages\TestClassConstructionFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestClassConstructionStarting" filename="C:\Dev\xunit\xunit\src\messages\TestClassConstructionStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestClassDisposeFinished" filename="C:\Dev\xunit\xunit\src\messages\TestClassDisposeFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestClassDisposeStarting" filename="C:\Dev\xunit\xunit\src\messages\TestClassDisposeStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestClassException" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\TestClassException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestClassFinished" filename="C:\Dev\xunit\xunit\src\messages\TestClassFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestClass,System.Decimal,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestClassMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestClassMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestClass" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestClass" signature="(Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestClassRunner`1" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\Runners\TestClassRunner.cs" line-rate="1" branch-rate="1" complexity="37">
          <methods>
            <method name="Aggregator" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Aggregator" signature="(Xunit.Sdk.ExceptionAggregator)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CancellationTokenSource" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CancellationTokenSource" signature="(System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Class" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Class" signature="(Xunit.Abstractions.IReflectionTypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessageSink" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessageSink" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MessageBus" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MessageBus" signature="(Xunit.Sdk.IMessageBus)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCaseOrderer" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCaseOrderer" signature="(Xunit.Sdk.ITestCaseOrderer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="(System.Collections.Generic.IEnumerable`1&lt;TTestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestClass" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestClass" signature="(Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestClass,Xunit.Abstractions.IReflectionTypeInfo,System.Collections.Generic.IEnumerable`1&lt;TTestCase&gt;,Xunit.Abstractions.IMessageSink,Xunit.Sdk.IMessageBus,Xunit.Sdk.ITestCaseOrderer,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestClassConstructorArguments" signature="()" line-rate="1" branch-rate="1" complexity="10">
              <lines />
            </method>
            <method name="FormatConstructorArgsMissingMessage" signature="(System.Reflection.ConstructorInfo,System.Collections.Generic.IReadOnlyList`1&lt;System.Tuple`2&lt;System.Int32,System.Reflection.ParameterInfo&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AfterTestClassStartingAsync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="BeforeTestClassFinishedAsync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="SelectTestClassConstructor" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="TryGetConstructorArgument" signature="(System.Reflection.ConstructorInfo,System.Int32,System.Reflection.ParameterInfo,System.Object&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunAsync" signature="()" line-rate="1" branch-rate="1" complexity="13">
              <lines />
            </method>
            <method name="RunTestMethodsAsync" signature="()" line-rate="1" branch-rate="1" complexity="9">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestClassStarting" filename="C:\Dev\xunit\xunit\src\messages\TestClassStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCollection" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\TestCollection.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="CollectionDefinition" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CollectionDefinition" signature="(Xunit.Abstractions.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestAssembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestAssembly" signature="(Xunit.Abstractions.ITestAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueID" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueID" signature="(System.Guid)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestAssembly,Xunit.Abstractions.ITypeInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestAssembly,Xunit.Abstractions.ITypeInfo,System.String,System.Guid)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCollectionCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestCollectionCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestCollection,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestCollection,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCollectionComparer" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\TestCollectionComparer.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Equals" signature="(Xunit.Abstractions.ITestCollection,Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="(Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCollectionFactoryHelper" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\TestCollectionFactoryHelper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetTestCollectionDefinitions" signature="(Xunit.Abstractions.IAssemblyInfo,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCollectionFinished" filename="C:\Dev\xunit\xunit\src\messages\TestCollectionFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestCollection,System.Decimal,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCollectionMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestCollectionMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestCollection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCollection" signature="(Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCollectionRunner`1" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\Runners\TestCollectionRunner.cs" line-rate="1" branch-rate="1" complexity="24">
          <methods>
            <method name="Aggregator" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Aggregator" signature="(Xunit.Sdk.ExceptionAggregator)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CancellationTokenSource" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CancellationTokenSource" signature="(System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MessageBus" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MessageBus" signature="(Xunit.Sdk.IMessageBus)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCaseOrderer" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCaseOrderer" signature="(Xunit.Sdk.ITestCaseOrderer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="(System.Collections.Generic.IEnumerable`1&lt;TTestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCollection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCollection" signature="(Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCollection,System.Collections.Generic.IEnumerable`1&lt;TTestCase&gt;,Xunit.Sdk.IMessageBus,Xunit.Sdk.ITestCaseOrderer,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AfterTestCollectionStartingAsync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="BeforeTestCollectionFinishedAsync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RunAsync" signature="()" line-rate="1" branch-rate="1" complexity="13">
              <lines />
            </method>
            <method name="RunTestClassesAsync" signature="()" line-rate="1" branch-rate="1" complexity="9">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestCollectionStarting" filename="C:\Dev\xunit\xunit\src\messages\TestCollectionStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestDiscoveryVisitor" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\TestDiscoveryVisitor.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestFailed" filename="C:\Dev\xunit\xunit\src\messages\TestFailed.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Decimal,System.String,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Decimal,System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestFinished" filename="C:\Dev\xunit\xunit\src\messages\TestFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestFramework" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\TestFramework.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="DiagnosticMessageSink" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessageSink" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisposalTracker" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisposalTracker" signature="(Xunit.Sdk.DisposalTracker)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceInformationProvider" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceInformationProvider" signature="(Xunit.Abstractions.ISourceInformationProvider)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDiscoverer" signature="(Xunit.Abstractions.IAssemblyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetExecutor" signature="(System.Reflection.AssemblyName)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSourceInformation" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestFrameworkDiscoverer" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\TestFrameworkDiscoverer.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="AssemblyInfo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyInfo" signature="(Xunit.Abstractions.IAssemblyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessageSink" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessageSink" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisposalTracker" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisposalTracker" signature="(Xunit.Sdk.DisposalTracker)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceProvider" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceProvider" signature="(Xunit.Abstractions.ISourceInformationProvider)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFramework" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkDisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IAssemblyInfo,Xunit.Abstractions.ISourceInformationProvider,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Find" signature="(System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageBus" signature="(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Find" signature="(System.String,System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindTestsForTypeAndWrapExceptions" signature="(Xunit.Abstractions.ITestClass,System.Boolean,Xunit.Sdk.IMessageBus,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsValidTestClass" signature="(Xunit.Abstractions.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReportDiscoveredTestCase" signature="(Xunit.Abstractions.ITestCase,System.Boolean,Xunit.Sdk.IMessageBus)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IAssemblyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestFrameworkExecutor`1" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\TestFrameworkExecutor.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="AssemblyInfo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyInfo" signature="(Xunit.Abstractions.IAssemblyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessageSink" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessageSink" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisposalTracker" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisposalTracker" signature="(Xunit.Sdk.DisposalTracker)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceInformationProvider" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceInformationProvider" signature="(Xunit.Abstractions.ISourceInformationProvider)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.AssemblyName,Xunit.Abstractions.ISourceInformationProvider,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RunAll" signature="(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestFrameworkProxy" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\TestFrameworkProxy.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="InnerTestFramework" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InnerTestFramework" signature="(Xunit.Abstractions.ITestFramework)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceInformationProvider" signature="(Xunit.Abstractions.ISourceInformationProvider)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateInnerTestFramework" signature="(System.Type,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDiscoverer" signature="(Xunit.Abstractions.IAssemblyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetExecutor" signature="(System.Reflection.AssemblyName)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestFrameworkType" signature="(Xunit.Abstractions.IAssemblyInfo,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestFrameworkTypeDiscoverer" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\TestFrameworkTypeDiscoverer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetTestFrameworkType" signature="(Xunit.Abstractions.IAttributeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestInvoker`1" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\Runners\TestInvoker.cs" line-rate="1" branch-rate="1" complexity="46">
          <methods>
            <method name="Aggregator" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Aggregator" signature="(Xunit.Sdk.ExceptionAggregator)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CancellationTokenSource" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CancellationTokenSource" signature="(System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConstructorArguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConstructorArguments" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MessageBus" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MessageBus" signature="(Xunit.Sdk.IMessageBus)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Test" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Test" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestClass" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestClass" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethodArguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethodArguments" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Timer" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Timer" signature="(Xunit.Sdk.ExecutionTimer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,Xunit.Sdk.IMessageBus,System.Type,System.Object[],System.Reflection.MethodInfo,System.Object[],Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestClass" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="AfterTestMethodInvokedAsync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="BeforeTestMethodInvokedAsync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CallTestMethod" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTaskFromResult" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunAsync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="SetSynchronizationContext" signature="(System.Threading.SynchronizationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="&gt;c__DisplayClass48_1/&lt;&lt;InvokeTestMethodAsync" signature="()" line-rate="1" branch-rate="1" complexity="16">
              <lines />
            </method>
            <method name="InvokeTestMethodAsync" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="&lt;RunAsync" signature="()" line-rate="1" branch-rate="1" complexity="19">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Test" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Test" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestMethod" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\TestMethod.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Method" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Method" signature="(Xunit.Abstractions.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestClass" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestClass" signature="(Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestClass,Xunit.Abstractions.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestMethodCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestMethodCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestMethod,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestMethod,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestMethodComparer" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\TestMethodComparer.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Equals" signature="(Xunit.Abstractions.ITestMethod,Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="(Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestMethodFinished" filename="C:\Dev\xunit\xunit\src\messages\TestMethodFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestMethod,System.Decimal,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestMethodMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestMethodMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="(Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestMethodRunner`1" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\Runners\TestMethodRunner.cs" line-rate="1" branch-rate="1" complexity="19">
          <methods>
            <method name="Aggregator" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Aggregator" signature="(Xunit.Sdk.ExceptionAggregator)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CancellationTokenSource" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CancellationTokenSource" signature="(System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Class" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Class" signature="(Xunit.Abstractions.IReflectionTypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MessageBus" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MessageBus" signature="(Xunit.Sdk.IMessageBus)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Method" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Method" signature="(Xunit.Abstractions.IReflectionMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="(System.Collections.Generic.IEnumerable`1&lt;TTestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="(Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IReflectionTypeInfo,Xunit.Abstractions.IReflectionMethodInfo,System.Collections.Generic.IEnumerable`1&lt;TTestCase&gt;,Xunit.Sdk.IMessageBus,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AfterTestMethodStarting" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="BeforeTestMethodFinished" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RunAsync" signature="()" line-rate="1" branch-rate="1" complexity="9">
              <lines />
            </method>
            <method name="RunTestCasesAsync" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestMethodStarting" filename="C:\Dev\xunit\xunit\src\messages\TestMethodStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestMethodTestCase" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\TestMethodTestCase.cs" line-rate="1" branch-rate="1" complexity="19">
          <methods>
            <method name="BaseDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultMethodDisplay" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultMethodDisplay" signature="(Xunit.Sdk.TestMethodDisplay)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultMethodDisplayOptions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultMethodDisplayOptions" signature="(Xunit.Sdk.TestMethodDisplayOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializationException" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializationException" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Method" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Method" signature="(Xunit.Abstractions.IMethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodGenericTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipReason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipReason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceInformation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceInformation" signature="(Xunit.Abstractions.ISourceInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="(Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethodArguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethodArguments" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Traits" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Traits" signature="(System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueID" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Sdk.TestMethodDisplay,Xunit.Abstractions.ITestMethod,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Sdk.TestMethodDisplay,Xunit.Sdk.TestMethodDisplayOptions,Xunit.Abstractions.ITestMethod,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="EnsureInitialized" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetUniqueID" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="BytesToHexString" signature="(System.Byte[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NibbleToHexChar" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Initialize" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="Write" signature="(System.IO.Stream,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestOutput" filename="C:\Dev\xunit\xunit\src\messages\TestOutput.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestOutputHelper" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\TestOutputHelper.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Initialize" signature="(Xunit.Sdk.IMessageBus,Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GuardInitialized" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="QueueTestOutput" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EscapeInvalidHexChars" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Uninitialize" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestPassed" filename="C:\Dev\xunit\xunit\src\messages\TestPassed.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestResultMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestResultMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestRunner`1" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\Runners\TestRunner.cs" line-rate="1" branch-rate="1" complexity="16">
          <methods>
            <method name="Aggregator" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Aggregator" signature="(Xunit.Sdk.ExceptionAggregator)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CancellationTokenSource" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CancellationTokenSource" signature="(System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConstructorArguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConstructorArguments" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MessageBus" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MessageBus" signature="(Xunit.Sdk.IMessageBus)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipReason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipReason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Test" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Test" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestClass" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestClass" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethodArguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethodArguments" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,Xunit.Sdk.IMessageBus,System.Type,System.Object[],System.Reflection.MethodInfo,System.Object[],System.String,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AfterTestStarting" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="BeforeTestFinished" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RunAsync" signature="()" line-rate="1" branch-rate="1" complexity="14">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestSkipped" filename="C:\Dev\xunit\xunit\src\messages\TestSkipped.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Reason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestStarting" filename="C:\Dev\xunit\xunit\src\messages\TestStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TestTimeoutException" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\TestTimeoutException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TheoryDiscoverer" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\TheoryDiscoverer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DiagnosticMessageSink" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestCaseForDataRow" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestCasesForDataRow" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestCaseForSkip" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestCasesForSkip" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestCaseForTheory" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestCasesForTheory" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestCaseForSkippedDataRow" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo,System.Object[],System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestCasesForSkippedDataRow" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo,System.Object[],System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Discover" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IAttributeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TraitHelper" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\TraitHelper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetTraits" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindDiscovererAttributeType" signature="(System.Reflection.TypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.TypeUtility" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\TypeUtility.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ConvertToSimpleTypeName" signature="(Xunit.Abstractions.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveMethodArguments" signature="(System.Reflection.MethodBase,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryConvertObject" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PerformDefinedConversions" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsByRefLikeType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDisplayNameWithArguments" signature="(Xunit.Abstractions.IMethodInfo,System.String,System.Object[],Xunit.Abstractions.ITypeInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetParameterName" signature="(Xunit.Abstractions.IParameterInfo[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParameterToDisplayValue" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveGenericDisplay" signature="(Xunit.Abstractions.ITypeInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveGenericParameter" signature="(Xunit.Abstractions.ITypeInfo,Xunit.Abstractions.ITypeInfo,System.Type,System.Type&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetArrayElementTypeOrThis" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StripElementType" signature="(Xunit.Abstractions.ITypeInfo,System.Boolean&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveMismatchedGenericArguments" signature="(Xunit.Abstractions.ITypeInfo,System.Type,Xunit.Abstractions.ITypeInfo[],System.Type&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveGenericType" signature="(Xunit.Abstractions.ITypeInfo,System.Object[],Xunit.Abstractions.IParameterInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveGenericTypes" signature="(Xunit.Abstractions.IMethodInfo,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultValue" signature="(System.Reflection.TypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitSkippedDataRowTestCase" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\XunitSkippedDataRowTestCase.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink,Xunit.Sdk.TestMethodDisplay,Xunit.Abstractions.ITestMethod,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink,Xunit.Sdk.TestMethodDisplay,Xunit.Sdk.TestMethodDisplayOptions,Xunit.Abstractions.ITestMethod,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSkipReason" signature="(Xunit.Abstractions.IAttributeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitTest" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\XunitTest.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCase" signature="(Xunit.Sdk.IXunitTestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITest.get_TestCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Sdk.IXunitTestCase,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitTestAssemblyRunner" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\Runners\XunitTestAssemblyRunner.cs" line-rate="1" branch-rate="1" complexity="55">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestAssembly,System.Collections.Generic.IEnumerable`1&lt;Xunit.Sdk.IXunitTestCase&gt;,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetTestFrameworkDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetTestFrameworkEnvironment" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="SetupSyncContext" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Initialize" signature="()" line-rate="1" branch-rate="1" complexity="12">
              <lines />
            </method>
            <method name="AfterTestAssemblyStartingAsync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="BeforeTestAssemblyFinishedAsync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RunTestCollectionAsync" signature="(Xunit.Sdk.IMessageBus,Xunit.Abstractions.ITestCollection,System.Collections.Generic.IEnumerable`1&lt;Xunit.Sdk.IXunitTestCase&gt;,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetSynchronizationContext" signature="(System.Threading.SynchronizationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestCollectionsAsync" signature="()" line-rate="1" branch-rate="1" complexity="35">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitTestCase" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\XunitTestCase.cs" line-rate="1" branch-rate="1" complexity="10">
          <methods>
            <method name="DiagnosticMessageSink" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Timeout" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Timeout" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink,Xunit.Sdk.TestMethodDisplay,Xunit.Abstractions.ITestMethod,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink,Xunit.Sdk.TestMethodDisplay,Xunit.Sdk.TestMethodDisplayOptions,Xunit.Abstractions.ITestMethod,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDisplayName" signature="(Xunit.Abstractions.IAttributeInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSkipReason" signature="(Xunit.Abstractions.IAttributeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTimeout" signature="(Xunit.Abstractions.IAttributeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Initialize" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name="GetCachedTraitAttributes" signature="(Xunit.Abstractions.IAssemblyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCachedTraitAttributes" signature="(Xunit.Abstractions.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTraitAttributesData" signature="(Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunAsync" signature="(Xunit.Abstractions.IMessageSink,Xunit.Sdk.IMessageBus,System.Object[],Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitTestCaseRunner" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\Runners\XunitTestCaseRunner.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="BeforeAfterAttributes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConstructorArguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConstructorArguments" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipReason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipReason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestClass" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestClass" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethodArguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethodArguments" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Sdk.IXunitTestCase,System.String,System.String,System.Object[],System.Object[],Xunit.Sdk.IMessageBus,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTest" signature="(Xunit.Sdk.IXunitTestCase,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestRunner" signature="(Xunit.Abstractions.ITest,Xunit.Sdk.IMessageBus,System.Type,System.Object[],System.Reflection.MethodInfo,System.Object[],System.String,System.Collections.Generic.IReadOnlyList`1&lt;Xunit.Sdk.BeforeAfterTestAttribute&gt;,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetBeforeAfterTestAttributes" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="RunTestAsync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitTestClassRunner" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\Runners\XunitTestClassRunner.cs" line-rate="1" branch-rate="1" complexity="28">
          <methods>
            <method name="ClassFixtureMappings" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassFixtureMappings" signature="(System.Collections.Generic.Dictionary`2&lt;System.Type,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializedAsyncFixtures" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializedAsyncFixtures" signature="(System.Collections.Generic.HashSet`1&lt;Xunit.IAsyncLifetime&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestClass,Xunit.Abstractions.IReflectionTypeInfo,System.Collections.Generic.IEnumerable`1&lt;Xunit.Sdk.IXunitTestCase&gt;,Xunit.Abstractions.IMessageSink,Xunit.Sdk.IMessageBus,Xunit.Sdk.ITestCaseOrderer,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource,System.Collections.Generic.IDictionary`2&lt;System.Type,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateClassFixture" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatConstructorArgsMissingMessage" signature="(System.Reflection.ConstructorInfo,System.Collections.Generic.IReadOnlyList`1&lt;System.Tuple`2&lt;System.Int32,System.Reflection.ParameterInfo&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestMethodAsync" signature="(Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IReflectionMethodInfo,System.Collections.Generic.IEnumerable`1&lt;Xunit.Sdk.IXunitTestCase&gt;,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectTestClassConstructor" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="TryGetConstructorArgument" signature="(System.Reflection.ConstructorInfo,System.Int32,System.Reflection.ParameterInfo,System.Object&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateClassFixtureAsync" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="AfterTestClassStartingAsync" signature="()" line-rate="1" branch-rate="1" complexity="16">
              <lines />
            </method>
            <method name="BeforeTestClassFinishedAsync" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitTestCollectionRunner" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\Runners\XunitTestCollectionRunner.cs" line-rate="1" branch-rate="1" complexity="22">
          <methods>
            <method name="CollectionFixtureMappings" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CollectionFixtureMappings" signature="(System.Collections.Generic.Dictionary`2&lt;System.Type,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessageSink" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessageSink" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCollection,System.Collections.Generic.IEnumerable`1&lt;Xunit.Sdk.IXunitTestCase&gt;,Xunit.Abstractions.IMessageSink,Xunit.Sdk.IMessageBus,Xunit.Sdk.ITestCaseOrderer,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateCollectionFixture" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCaseOrderer" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="RunTestClassAsync" signature="(Xunit.Abstractions.ITestClass,Xunit.Abstractions.IReflectionTypeInfo,System.Collections.Generic.IEnumerable`1&lt;Xunit.Sdk.IXunitTestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AfterTestCollectionStartingAsync" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="BeforeTestCollectionFinishedAsync" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="CreateCollectionFixturesAsync" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitTestFramework" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\XunitTestFramework.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateDiscoverer" signature="(Xunit.Abstractions.IAssemblyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateExecutor" signature="(System.Reflection.AssemblyName)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitTestFrameworkDiscoverer" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\XunitTestFrameworkDiscoverer.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="DiscovererTypeCache" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCollectionFactory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCollectionFactory" signature="(Xunit.Sdk.IXunitTestCollectionFactory)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IAssemblyInfo,Xunit.Abstractions.ISourceInformationProvider,Xunit.Abstractions.IMessageSink,Xunit.Sdk.IXunitTestCollectionFactory)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestClass" signature="(Xunit.Abstractions.ITypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestClass" signature="(Xunit.Abstractions.ITypeInfo,System.Guid)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindTestsForMethod" signature="(Xunit.Abstractions.ITestMethod,System.Boolean,Xunit.Sdk.IMessageBus,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindTestsForType" signature="(Xunit.Abstractions.ITestClass,System.Boolean,Xunit.Sdk.IMessageBus,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDiscoverer" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitTestFrameworkExecutor" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\XunitTestFrameworkExecutor.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="TestAssembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestAssembly" signature="(Xunit.Sdk.TestAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.AssemblyName,Xunit.Abstractions.ISourceInformationProvider,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateDiscoverer" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Deserialize" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestCases" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitTestInvoker" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\Runners\XunitTestInvoker.cs" line-rate="1" branch-rate="1" complexity="14">
          <methods>
            <method name="BeforeAfterAttributes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,Xunit.Sdk.IMessageBus,System.Type,System.Object[],System.Reflection.MethodInfo,System.Object[],System.Collections.Generic.IReadOnlyList`1&lt;Xunit.Sdk.BeforeAfterTestAttribute&gt;,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeforeTestMethodInvokedAsync" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="AfterTestMethodInvokedAsync" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="InvokeTestMethodAsync" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeTimeoutTestMethodAsync" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitTestMethodRunner" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\Runners\XunitTestMethodRunner.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestMethod,Xunit.Abstractions.IReflectionTypeInfo,Xunit.Abstractions.IReflectionMethodInfo,System.Collections.Generic.IEnumerable`1&lt;Xunit.Sdk.IXunitTestCase&gt;,Xunit.Abstractions.IMessageSink,Xunit.Sdk.IMessageBus,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestCaseAsync" signature="(Xunit.Sdk.IXunitTestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitTestRunner" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\Runners\XunitTestRunner.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="BeforeAfterAttributes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,Xunit.Sdk.IMessageBus,System.Type,System.Object[],System.Reflection.MethodInfo,System.Object[],System.String,System.Collections.Generic.IReadOnlyList`1&lt;Xunit.Sdk.BeforeAfterTestAttribute&gt;,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeTestMethodAsync" signature="(Xunit.Sdk.ExceptionAggregator)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeTestAsync" signature="()" line-rate="1" branch-rate="1" complexity="7">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitTheoryTestCase" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\XunitTheoryTestCase.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink,Xunit.Sdk.TestMethodDisplay,Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink,Xunit.Sdk.TestMethodDisplay,Xunit.Sdk.TestMethodDisplayOptions,Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunAsync" signature="(Xunit.Abstractions.IMessageSink,Xunit.Sdk.IMessageBus,System.Object[],Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitTheoryTestCaseRunner" filename="C:\Dev\xunit\xunit\src\xunit.execution\Sdk\Frameworks\Runners\XunitTheoryTestCaseRunner.cs" line-rate="1" branch-rate="1" complexity="32">
          <methods>
            <method name="DiagnosticMessageSink" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Sdk.IXunitTestCase,System.String,System.String,System.Object[],Xunit.Abstractions.IMessageSink,Xunit.Sdk.IMessageBus,Xunit.Sdk.ExceptionAggregator,System.Threading.CancellationTokenSource)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeforeTestCaseFinishedAsync" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RunTest_DataDiscoveryException" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AfterTestCaseStartingAsync" signature="()" line-rate="1" branch-rate="1" complexity="17">
              <lines />
            </method>
            <method name="RunTestAsync" signature="()" line-rate="1" branch-rate="1" complexity="9">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitWorkerThread" filename="C:\Dev\xunit\xunit\src\common\XunitWorkerThread.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Join" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="QueueUserWorkItem" signature="(System.Action,System.Threading.EventWaitHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Serialization.XunitSerializationInfo" filename="C:\Dev\xunit\xunit\src\common\XunitSerializationInfo.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.IXunitSerializable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddValue" signature="(System.String,System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValue" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValue" signature="(System.String,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToSerializedString" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="SerializeTriple" signature="(Xunit.Serialization.XunitSerializationTriple)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeTriple" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeSerializable" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanSerializeObject" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FromBase64" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToBase64" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ArrayData" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Array)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Serialization.XunitSerializationTriple" filename="C:\Dev\xunit\xunit\src\common\XunitSerializationInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="xunit.runner.reporters.net452" line-rate="0.007428040854224698" branch-rate="0.002564102564102564" complexity="373">
      <classes>
        <class name="Xunit.EnvironmentHelper" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\Utility\EnvironmentHelper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetEnvironmentVariable" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonArray" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Length" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonValue[],System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonBoolean" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="op_Implicit" signature="(Xunit.JsonBoolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonBuffer" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="35">
          <methods>
            <method name=".ctor" signature="(System.IO.TextReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Read" signature="()" line-rate="1" branch-rate="1" complexity="15">
              <lines />
            </method>
            <method name="ReadNextChar" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ReadNumber" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadLiteral" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadString" signature="()" line-rate="1" branch-rate="1" complexity="17">
              <lines />
            </method>
            <method name="IsWhitespace" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializer" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Deserialize" signature="(System.IO.TextReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeInternal" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeArray" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeObject" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializerException" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Column" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializerResource" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="JSON_OpenString" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="JSON_InvalidEnd" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_IllegalCharacter" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_IllegalTrailingCharacterAfterLiteral" signature="(System.Int32,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_UnrecognizedLiteral" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_DuplicateObjectMemberName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidFloatNumberFormat" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_FloatNumberOverflow" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntax" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxNotExpected" signature="(System.String,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxNotExpected" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.Char,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidTokenExpectation" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidUnicode" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_UnfinishedJSON" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonNull" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonNumber" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Double" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raw" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonObject" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Keys" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,Xunit.JsonValue&gt;,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsJsonObject" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsInt" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsBoolean" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsNullableBoolean" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsStringArray" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonString" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="op_Implicit" signature="(Xunit.JsonString)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonValue" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Column" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.AppVeyorClient" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\AppVeyorClient.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name=".ctor" signature="(Xunit.IRunnerLogger,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WaitOne" signature="(System.Threading.CancellationToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddTest" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UpdateTest" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunLoop" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendRequest" signature="()" line-rate="1" branch-rate="1" complexity="9">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.AppVeyorReporter" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\AppVeyorReporter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnvironmentallyEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageHandler" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.AppVeyorReporterMessageHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\AppVeyorReporterMessageHandler.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.IRunnerLogger,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestPassed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestPassed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestSkipped" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestSkipped&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestFailed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestFailed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFinishedTestName" signature="(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppVeyorAddTest" signature="(System.String,System.String,System.String,System.String,System.Nullable`1&lt;System.Int64&gt;,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppVeyorUpdateTest" signature="(System.String,System.String,System.String,System.String,System.Nullable`1&lt;System.Int64&gt;,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TrimStdOut" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.JsonExtentions" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\JsonExtentions.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ToJson" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddValue" signature="(System.Text.StringBuilder,System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="JsonEscape" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="initObject" signature="(System.String,System.Object,System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestCollectionStarting,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestCollectionFinished,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestFailed,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestSkipped,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestStarting,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.IErrorMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestPassed,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestMethodCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestCollectionCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestClassCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestAssemblyCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(Xunit.Abstractions.ITestCaseCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.JsonReporter" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\JsonReporter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnvironmentallyEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageHandler" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.JsonReporterMessageHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\JsonReporterMessageHandler.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IRunnerLogger,System.Func`2&lt;System.String,System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToFlowId" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.QuietReporter" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\QuietReporter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnvironmentallyEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageHandler" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.QuietReporterMessageHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\QuietReporterMessageHandler.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.TeamCityDisplayNameFormatter" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\Utility\TeamCityDisplayNameFormatter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="DisplayName" signature="(Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.TeamCityReporter" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\TeamCityReporter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnvironmentallyEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageHandler" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.TeamCityReporterMessageHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\TeamCityReporterMessageHandler.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.IRunnerLogger,System.Func`2&lt;System.String,System.String&gt;,Xunit.Runner.Reporters.TeamCityDisplayNameFormatter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleErrorMessage" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.IErrorMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestClassCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCollectionCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCollectionCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCollectionFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCollectionFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCollectionStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCollectionStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestFailed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestFailed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestMethodCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestMethodCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestPassed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestPassed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestSkipped" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestSkipped&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(System.String,Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogFinish" signature="(Xunit.Abstractions.ITestResultMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAscii" signature="(System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Escape" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToFlowId" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.VerboseReporter" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\VerboseReporter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnvironmentallyEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageHandler" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.VerboseReporterMessageHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\VerboseReporterMessageHandler.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.VstsClient" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\VstsClient.cs" line-rate="1" branch-rate="1" complexity="64">
          <methods>
            <method name=".ctor" signature="(Xunit.IRunnerLogger,System.String,System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WaitOne" signature="(System.Threading.CancellationToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddTest" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;,Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UpdateTest" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;,Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToJson" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RunLoop" signature="()" line-rate="1" branch-rate="1" complexity="18">
              <lines />
            </method>
            <method name="CreateTestRun" signature="()" line-rate="1" branch-rate="1" complexity="12">
              <lines />
            </method>
            <method name="FinishTestRun" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name="SendTestResults" signature="()" line-rate="1" branch-rate="1" complexity="24">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.VstsReporter" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\VstsReporter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnvironmentallyEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageHandler" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.Reporters.VstsReporterMessageHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.reporters\VstsReporterMessageHandler.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.IRunnerLogger,System.String,System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestPassed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestPassed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestSkipped" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestSkipped&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestFailed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestFailed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VstsAddTest" signature="(System.String,System.String,System.String,Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VstsUpdateTest" signature="(Xunit.Abstractions.ITest,System.String,System.Nullable`1&lt;System.Int64&gt;,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TrimStdOut" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitWorkerThread" filename="C:\Dev\xunit\xunit\src\common\XunitWorkerThread.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Join" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="QueueUserWorkItem" signature="(System.Action,System.Threading.EventWaitHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="xunit.runner.utility.net452" line-rate="0.1807465618860511" branch-rate="0.09768492377188029" complexity="1690">
      <classes>
        <class name="AssemblyExtensions" filename="C:\Dev\xunit\xunit\src\common\AssemblyExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetLocalCodeBase" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetLocalCodeBase" signature="(System.String,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="CommonTasks" filename="C:\Dev\xunit\xunit\src\common\CommonTasks.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="DictionaryExtensions" filename="C:\Dev\xunit\xunit\src\common\DictionaryExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Add" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,System.Collections.Generic.List`1&lt;TValue&gt;&gt;,TKey,TValue)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,System.Collections.Generic.List`1&lt;TValue&gt;&gt;,TKey,TValue,System.Collections.Generic.IEqualityComparer`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetOrAdd" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;,TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetOrAdd" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;,TKey,System.Func`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToDictionaryIgnoringDuplicateKeys" signature="(System.Collections.Generic.IEnumerable`1&lt;TValue&gt;,System.Func`2&lt;TValue,TKey&gt;,System.Collections.Generic.IEqualityComparer`1&lt;TKey&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToDictionaryIgnoringDuplicateKeys" signature="(System.Collections.Generic.IEnumerable`1&lt;TInput&gt;,System.Func`2&lt;TInput,TKey&gt;,System.Func`2&lt;TInput,TValue&gt;,System.Collections.Generic.IEqualityComparer`1&lt;TKey&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="DisposableExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Extensions\DisposableExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="SafeDispose" signature="(System.IDisposable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="ExceptionExtensions" filename="C:\Dev\xunit\xunit\src\common\ExceptionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="RethrowWithNoStackTraceLoss" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Unwrap" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Guard" filename="C:\Dev\xunit\xunit\src\common\Guard.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ArgumentNotNull" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentNotNullOrEmpty" signature="(System.String,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentValid" signature="(System.String,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FileExists" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="IRunnerLoggerExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Extensions\IRunnerLoggerExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="LogMessage" signature="(Xunit.IRunnerLogger,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogMessage" signature="(Xunit.IRunnerLogger,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogMessage" signature="(Xunit.IRunnerLogger,Xunit.StackFrameInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogImportantMessage" signature="(Xunit.IRunnerLogger,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogImportantMessage" signature="(Xunit.IRunnerLogger,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogImportantMessage" signature="(Xunit.IRunnerLogger,Xunit.StackFrameInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarning" signature="(Xunit.IRunnerLogger,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarning" signature="(Xunit.IRunnerLogger,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarning" signature="(Xunit.IRunnerLogger,Xunit.StackFrameInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(Xunit.IRunnerLogger,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(Xunit.IRunnerLogger,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(Xunit.IRunnerLogger,Xunit.StackFrameInfo,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="MessageSinkMessageExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Extensions\MessageSinkMessageExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Cast" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispatch" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;,Xunit.MessageHandler`1&lt;TMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="MessageSinkWithTypesExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Extensions\MessageSinkWithTypesExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="OnMessage" signature="(Xunit.IMessageSinkWithTypes,Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="NewReflectionExtensions" filename="C:\Dev\xunit\xunit\src\common\NewReflectionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetAssembly" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnum" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFromLocalAssembly" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsGenericType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsGenericTypeDefinition" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNullableEnum" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsValueType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnwrapNullable" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetGenericArguments" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInterfaces" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssignableFrom" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="TestFrameworkExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Extensions\TestFrameworkExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Find" signature="(Xunit.Abstractions.ITestFrameworkDiscoverer,System.Boolean,Xunit.IMessageSinkWithTypes,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Find" signature="(Xunit.Abstractions.ITestFrameworkDiscoverer,System.String,System.Boolean,Xunit.IMessageSinkWithTypes,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunAll" signature="(Xunit.Abstractions.ITestFrameworkExecutor,Xunit.IMessageSinkWithTypes,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(Xunit.Abstractions.ITestFrameworkExecutor,System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.IMessageSinkWithTypes,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="TestFrameworkOptionsReadWriteExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Extensions\TestFrameworkOptionsReadWriteExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetDiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInternalDiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDiagnosticMessagesOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInternalDiagnosticMessagesOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodDisplay" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodDisplayOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodDisplayOptions" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodDisplayOptionsOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPreEnumerateTheories" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPreEnumerateTheoriesOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSynchronousMessageReporting" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSynchronousMessageReportingOrDefault" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetDiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetInternalDiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetMethodDisplay" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,System.Nullable`1&lt;Xunit.TestMethodDisplay&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetMethodDisplayOptions" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,System.Nullable`1&lt;Xunit.TestMethodDisplayOptions&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetPreEnumerateTheories" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetSynchronousMessageReporting" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInternalDiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDiagnosticMessagesOrDefault" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInternalDiagnosticMessagesOrDefault" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDisableParallelization" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDisableParallelizationOrDefault" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMaxParallelThreads" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMaxParallelThreadsOrDefault" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSynchronousMessageReporting" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSynchronousMessageReportingOrDefault" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetDiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetInternalDiagnosticMessages" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetStopOnTestFail" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetDisableParallelization" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetMaxParallelThreads" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions,System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetSynchronousMessageReporting" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="TestOptionsNames" filename="C:\Dev\xunit\xunit\src\common\TestOptionsNames.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="XmlNodeExtensions" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\XmlNodeExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ToTestCase" signature="(System.Xml.XmlNode,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit._DiagnosticMessage" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\_DiagnosticMessage.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AfterTestFinished" filename="C:\Dev\xunit\xunit\src\messages\AfterTestFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AttributeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AttributeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AfterTestStarting" filename="C:\Dev\xunit\xunit\src\messages\AfterTestStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AttributeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AttributeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AggregateMessageSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\AggregateMessageSink.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="AggregatedSinks" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="GetOrCreateAggregatedSink" signature="(TDispatcher&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AppDomainManager_AppDomain" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\AppDomain\AppDomainManager_AppDomain.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="AppDomain" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppDomain" signature="(System.AppDomain)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyFileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyFileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfigFileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfigFileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasAppDomain" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateAppDomain" signature="(System.String,System.String,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateObjectFrom" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateObject" signature="(System.Reflection.AssemblyName,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="GetDefaultConfigFile" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AppDomainManager_NoAppDomain" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\AppDomain\AppDomainManager_NoAppDomain.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="HasAppDomain" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateObject" signature="(System.Reflection.AssemblyName,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateObjectFrom" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AppDomainManagerFactory" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\AppDomain\AppDomainManagerFactory.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Create" signature="(System.Boolean,System.String,System.String,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AssemblyHelper" filename="C:\Dev\xunit\xunit\src\common\AssemblyResolution\AssemblyHelper_Desktop.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="LoadAssembly" signature="(System.Reflection.AssemblyName)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Resolve" signature="(System.Object,System.ResolveEventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveAndLoadAssembly" signature="(System.String,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubscribeResolveForAssembly" signature="(System.String,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubscribeResolveForAssembly" signature="(System.Type,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.BeforeTestFinished" filename="C:\Dev\xunit\xunit\src\messages\BeforeTestFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AttributeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AttributeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.BeforeTestStarting" filename="C:\Dev\xunit\xunit\src\messages\BeforeTestStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AttributeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AttributeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ConfigReader" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Configuration\ConfigReader.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Load" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Load" signature="(System.IO.Stream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ConfigReader_Configuration" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Configuration\ConfigReader_Configuration.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Load" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetBoolean" signature="(System.Configuration.KeyValueConfigurationCollection,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEnum" signature="(System.Configuration.KeyValueConfigurationCollection,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInt" signature="(System.Configuration.KeyValueConfigurationCollection,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValue" signature="(System.Configuration.KeyValueConfigurationCollection,System.String,System.Func`2&lt;System.String,T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ConfigReader_Json" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Configuration\ConfigReader_Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Load" signature="(System.IO.Stream)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Load" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LoadFile" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="File_OpenRead" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ConsoleHelper" filename="C:\Dev\xunit\xunit\src\common\ConsoleHelper.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="SetForegroundColorANSI" signature="(System.ConsoleColor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetForegroundColorConsole" signature="(System.ConsoleColor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResetColorANSI" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ResetColorConsole" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ConsoleRunnerLogger" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\ConsoleRunnerLogger.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="LockObject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogImportantMessage" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogMessage" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarning" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetColor" signature="(System.ConsoleColor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.ConsoleColor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DefaultRunnerReporter" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Reporters\DefaultRunnerReporter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnvironmentallyEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageHandler" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DefaultRunnerReporterMessageHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Reporters\DefaultRunnerReporterMessageHandler.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="Logger" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Logger" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddExecutionOptions" signature="(System.String,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Escape" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAssemblyDisplayName" signature="(Xunit.Abstractions.ITestAssemblyMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAssemblyDisplayName" signature="(Xunit.XunitProjectAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetExecutionOptions" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(System.String,Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogStackTrace" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogOutput" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RemoveExecutionOptions" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IErrorMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestAssemblyDiscoveryFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestAssemblyDiscoveryStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestAssemblyExecutionFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestAssemblyExecutionStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestAssemblyCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCaseCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCollectionCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestExecutionSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestFailed)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestMethodCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestPassed)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestSkipped)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteDefaultSummary" signature="(Xunit.IRunnerLogger,Xunit.ITestExecutionSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ReadLock" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WriteLock" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DefaultRunnerReporterWithTypes" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Reporters\DefaultRunnerReporterWithTypes.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnvironmentallyEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunnerSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateMessageHandler" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DefaultRunnerReporterWithTypesMessageHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Reporters\DefaultRunnerReporterWithTypesMessageHandler.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="Logger" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Logger" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IRunnerLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddExecutionOptions" signature="(System.String,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Escape" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAssemblyDisplayName" signature="(Xunit.Abstractions.ITestAssemblyMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAssemblyDisplayName" signature="(Xunit.XunitProjectAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetExecutionOptions" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(System.String,Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogStackTrace" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogOutput" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RemoveExecutionOptions" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleErrorMessage" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.IErrorMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyDiscoveryFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.ITestAssemblyDiscoveryFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyDiscoveryStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.ITestAssemblyDiscoveryStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyExecutionFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.ITestAssemblyExecutionFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyExecutionStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.ITestAssemblyExecutionStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestClassCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestClassCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCollectionCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCollectionCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestExecutionSummary" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.ITestExecutionSummary&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestFailed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestFailed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestMethodCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestMethodCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestPassed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestPassed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestSkipped" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestSkipped&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteDefaultSummary" signature="(Xunit.IRunnerLogger,Xunit.ITestExecutionSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ReadLock" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WriteLock" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DefaultTestCaseBulkDeserializer" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Descriptor\DefaultTestCaseBulkDeserializer.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestFrameworkExecutor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BulkDeserialize" signature="(System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DefaultTestCaseDescriptorProvider" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Descriptor\DefaultTestCaseDescriptorProvider.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestFrameworkDiscoverer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCaseDescriptors" signature="(System.Collections.Generic.List`1&lt;Xunit.Abstractions.ITestCase&gt;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DelegatingExecutionSummarySink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\DelegatingSinks\DelegatingExecutionSummarySink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ExecutionSummary" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IMessageSinkWithTypes,System.Func`1&lt;System.Boolean&gt;,System.Action`2&lt;System.String,Xunit.ExecutionSummary&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="HandleTestAssemblyFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DelegatingFailSkipSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\DelegatingSinks\DelegatingFailSkipSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ExecutionSummary" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IExecutionSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DelegatingLongRunningTestDetectionSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\DelegatingSinks\DelegatingLongRunningTestDetectionSink.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="ExecutionSummary" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UtcNow" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IExecutionSink,System.TimeSpan,Xunit.IMessageSinkWithTypes)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IExecutionSink,System.TimeSpan,System.Action`1&lt;Xunit.LongRunningTestsSummary&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DispatchLongRunningTestsSummaryAsDiagnosticMessage" signature="(Xunit.LongRunningTestsSummary,Xunit.IMessageSinkWithTypes)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="HandleTestAssemblyFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendLongRunningMessage" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="ThreadWorker" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="WaitForStopEvent" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DelegatingXmlCreationSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\DelegatingSinks\DelegatingXmlCreationSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ExecutionSummary" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IExecutionSink,System.Xml.Linq.XElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddError" signature="(System.String,System.String,Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateFailureElement" signature="(Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestResultElement" signature="(Xunit.Abstractions.ITestResultMessage,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetTestCollectionElement" signature="(Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleErrorMessage" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.IErrorMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestClassCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestClassCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCollectionCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCollectionCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCollectionFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCollectionFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestFailed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestFailed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestMethodCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestMethodCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestPassed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestPassed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestSkipped" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestSkipped&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="XmlEscape" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DiagnosticEventSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\EventSinks\DiagnosticEventSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DiagnosticMessage" filename="C:\Dev\xunit\xunit\src\messages\DiagnosticMessage.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="InterfaceTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DiaNavigationData" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\DiaNavigationData.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="FileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LineNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LineNumber" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DiaSession" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\DiaSession.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetNavigationData" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DiaSessionWrapper" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\DiaSessionWrapper.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNavigationData" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DiaSessionWrapperHelper" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\DiaSessionWrapperHelper.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStateMachineType_NoOp" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InitializeGetStateMachineType" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Normalize" signature="(System.String&amp;,System.String&amp;,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.DiscoveryEventSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\EventSinks\DiscoveryEventSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ErrorMessage" filename="C:\Dev\xunit\xunit\src\messages\ErrorMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ExceptionUtility" filename="C:\Dev\xunit\xunit\src\common\ExceptionUtility.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CombineMessages" signature="(Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CombineStackTraces" signature="(Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExcludeStackFrame" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterStackTrace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAt" signature="(System.String[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAt" signature="(System.Int32[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMessage" signature="(Xunit.Abstractions.IFailureInformation,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNamespace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStackTrace" signature="(Xunit.Abstractions.IFailureInformation,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertExceptionToFailureInformation" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertExceptionToFailureInformation" signature="(System.Exception,System.Int32,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.String&gt;,System.Collections.Generic.List`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SplitLines" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ExecutionEventSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\EventSinks\ExecutionEventSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ExecutionSummary" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\ExecutionSummary.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Total" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Total" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Failed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Failed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Skipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Skipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Time" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Time" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Errors" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Errors" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.FailSkipVisitor" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Visitors\FailSkipVisitor.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionSummary" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IExecutionVisitor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonArray" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Length" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonValue[],System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonBoolean" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="op_Implicit" signature="(Xunit.JsonBoolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonBuffer" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="35">
          <methods>
            <method name=".ctor" signature="(System.IO.TextReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Read" signature="()" line-rate="1" branch-rate="1" complexity="15">
              <lines />
            </method>
            <method name="ReadNextChar" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ReadNumber" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadLiteral" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadString" signature="()" line-rate="1" branch-rate="1" complexity="17">
              <lines />
            </method>
            <method name="IsWhitespace" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializer" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Deserialize" signature="(System.IO.TextReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeInternal" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeArray" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeObject" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializerException" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Column" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializerResource" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="JSON_OpenString" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="JSON_InvalidEnd" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_IllegalCharacter" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_IllegalTrailingCharacterAfterLiteral" signature="(System.Int32,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_UnrecognizedLiteral" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_DuplicateObjectMemberName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidFloatNumberFormat" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_FloatNumberOverflow" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntax" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxNotExpected" signature="(System.String,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxNotExpected" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.Char,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidTokenExpectation" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidUnicode" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_UnfinishedJSON" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonNull" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonNumber" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Double" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raw" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonObject" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Keys" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,Xunit.JsonValue&gt;,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsJsonObject" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsInt" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsBoolean" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsNullableBoolean" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsStringArray" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonString" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="op_Implicit" signature="(Xunit.JsonString)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonValue" filename="C:\Dev\xunit\xunit\src\common\Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Column" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.LongRunningTestsSummary" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\LongRunningTestsSummary.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ConfiguredLongRunningTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.TimeSpan,System.Collections.Generic.IDictionary`2&lt;Xunit.Abstractions.ITestCase,System.TimeSpan&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.MessageHandlerArgs" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\EventSinks\MessageHandlerArgs.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="IsStopped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsStopped" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Stop" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.MessageHandlerArgs`1" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\EventSinks\MessageHandlerArgs.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(TMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.MessageSinkAdapter" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\MessageSinkAdapter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(Xunit.IMessageSinkWithTypes)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetImplementedInterfaces" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Wrap" signature="(Xunit.IMessageSinkWithTypes)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.MessageSinkWithTypesAdapter" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\MessageSinkWithTypesAdapter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Wrap" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.NullMessageSink" filename="C:\Dev\xunit\xunit\src\common\NullMessageSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.NullSourceInformationProvider" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\NullSourceInformationProvider.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="GetSourceInformation" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.OptimizedRemoteMessageSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\OptimizedRemoteMessageSink.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.IMessageSinkWithTypes)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMessageTypes" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.RemotingUtility" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\RemotingUtility.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="CleanUpRegisteredChannels" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.RunnerEventSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\EventSinks\RunnerEventSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.AssemblyRunner" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\AssemblyRunner.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="OnDiagnosticMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnDiagnosticMessage" signature="(System.Action`1&lt;Xunit.Runners.DiagnosticMessageInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnDiscoveryComplete" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnDiscoveryComplete" signature="(System.Action`1&lt;Xunit.Runners.DiscoveryCompleteInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnErrorMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnErrorMessage" signature="(System.Action`1&lt;Xunit.Runners.ErrorMessageInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnExecutionComplete" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnExecutionComplete" signature="(System.Action`1&lt;Xunit.Runners.ExecutionCompleteInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestFailed" signature="(System.Action`1&lt;Xunit.Runners.TestFailedInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestFinished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestFinished" signature="(System.Action`1&lt;Xunit.Runners.TestFinishedInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestOutput" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestOutput" signature="(System.Action`1&lt;Xunit.Runners.TestOutputInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestPassed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestPassed" signature="(System.Action`1&lt;Xunit.Runners.TestPassedInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestSkipped" signature="(System.Action`1&lt;Xunit.Runners.TestSkippedInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestStarting" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTestStarting" signature="(System.Action`1&lt;Xunit.Runners.TestStartingInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Status" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCaseFilter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCaseFilter" signature="(System.Func`2&lt;Xunit.Abstractions.ITestCase,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.AppDomainSupport,System.String,System.String,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddMessageTypeName" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Cancel" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="GetDiscoveryOptions" signature="(System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;Xunit.TestMethodDisplay&gt;,System.Nullable`1&lt;Xunit.TestMethodDisplayOptions&gt;,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetExecutionOptions" signature="(System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Start" signature="(System.String,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;Xunit.TestMethodDisplay&gt;,System.Nullable`1&lt;Xunit.TestMethodDisplayOptions&gt;,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Int32&gt;,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithAppDomain" signature="(System.String,System.String,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithoutAppDomain" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DispatchMessage" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;,System.Action`1&lt;TMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.IMessageSinkWithTypes.OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.DiagnosticMessageInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\DiagnosticMessageInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.DiscoveryCompleteInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\DiscoveryCompleteInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestCasesDiscovered" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCasesToRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.ErrorMessageInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\ErrorMessageInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="MesssageType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionStackTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Runners.ErrorMessageType,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.ExecutionCompleteInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\ExecutionCompleteInfo.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="TotalTests" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32,System.Int32,System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.TestExecutedInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\TestExecutedInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String,System.String,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.TestFailedInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\TestFailedInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionMessage" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionStackTrace" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String,System.String,System.Decimal,System.String,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.TestFinishedInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\TestFinishedInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String,System.String,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.TestInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\TestInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TypeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Traits" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCollectionDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.TestOutputInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\TestOutputInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.TestPassedInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\TestPassedInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String,System.String,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.TestSkippedInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\TestSkippedInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="SkipReason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runners.TestStartingInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Runners\TestStartingInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.LongLivedMarshalByRefObject" filename="C:\Dev\xunit\xunit\src\common\LongLivedMarshalByRefObject.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="DisconnectAll" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="InitializeLifetimeService" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.SerializationHelper" filename="C:\Dev\xunit\xunit\src\common\SerializationHelper.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Deserialize" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSerializable" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetType" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetType" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTypeNameForSerialization" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubstringTrim" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SplitAtOuterCommas" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Sdk.XunitWorkerThread" filename="C:\Dev\xunit\xunit\src\common\XunitWorkerThread.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Join" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="QueueUserWorkItem" signature="(System.Action,System.Threading.EventWaitHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Serialization.XunitSerializationInfo" filename="C:\Dev\xunit\xunit\src\common\XunitSerializationInfo.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.IXunitSerializable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddValue" signature="(System.String,System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValue" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValue" signature="(System.String,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToSerializedString" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="SerializeTriple" signature="(Xunit.Serialization.XunitSerializationTriple)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeTriple" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeSerializable" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanSerializeObject" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FromBase64" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToBase64" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ArrayData" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Array)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Serialization.XunitSerializationTriple" filename="C:\Dev\xunit\xunit\src\common\XunitSerializationInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String,System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.SourceInformation" filename="C:\Dev\xunit\xunit\src\common\SourceInformation.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="FileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LineNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LineNumber" signature="(System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.StackFrameInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\StackFrameInfo.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="FileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEmpty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LineNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LineNumber" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FromFailure" signature="(Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FromSourceInformation" signature="(Xunit.Abstractions.ISourceInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetStackFrameRegex" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.StackFrameTransformer" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Utility\StackFrameTransformer.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="TransformFrame" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TransformStack" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestAssemblyCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestAssembly,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestAssembly,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyConfiguration" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\TestAssemblyConfiguration.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AppDomain" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppDomain" signature="(System.Nullable`1&lt;Xunit.AppDomainSupport&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppDomainOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessages" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessagesOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalDiagnosticMessages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalDiagnosticMessages" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalDiagnosticMessagesOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LongRunningTestSeconds" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LongRunningTestSeconds" signature="(System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LongRunningTestSecondsOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaxParallelThreads" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaxParallelThreads" signature="(System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MaxParallelThreadsOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDisplay" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDisplay" signature="(System.Nullable`1&lt;Xunit.TestMethodDisplay&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDisplayOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDisplayOptions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDisplayOptions" signature="(System.Nullable`1&lt;Xunit.TestMethodDisplayOptions&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDisplayOptionsOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelizeAssembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelizeAssembly" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelizeAssemblyOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelizeTestCollections" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelizeTestCollections" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParallelizeTestCollectionsOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PreEnumerateTheories" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PreEnumerateTheories" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PreEnumerateTheoriesOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShadowCopy" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShadowCopy" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShadowCopyOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopOnFail" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopOnFail" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StopOnFailOrDefault" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyDiscoveryFinished" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\TestAssemblyDiscoveryFinished.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assembly" signature="(Xunit.XunitProjectAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscoveryOptions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscoveryOptions" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InterfaceTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCasesDiscovered" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCasesDiscovered" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCasesToRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCasesToRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.XunitProjectAssembly,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyDiscoveryStarting" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\TestAssemblyDiscoveryStarting.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="AppDomain" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppDomain" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assembly" signature="(Xunit.XunitProjectAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscoveryOptions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscoveryOptions" signature="(Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InterfaceTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShadowCopy" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShadowCopy" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.XunitProjectAssembly,System.Boolean,System.Boolean,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyExecutionFinished" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\TestAssemblyExecutionFinished.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assembly" signature="(Xunit.XunitProjectAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionOptions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionOptions" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionSummary" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionSummary" signature="(Xunit.ExecutionSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InterfaceTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.XunitProjectAssembly,Xunit.Abstractions.ITestFrameworkExecutionOptions,Xunit.ExecutionSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyExecutionStarting" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\TestAssemblyExecutionStarting.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assembly" signature="(Xunit.XunitProjectAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionOptions" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionOptions" signature="(Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InterfaceTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.XunitProjectAssembly,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyFinished" filename="C:\Dev\xunit\xunit\src\messages\TestAssemblyFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestAssembly,System.Decimal,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestAssemblyMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestAssembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestAssembly" signature="(Xunit.Abstractions.ITestAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,Xunit.Abstractions.ITestAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestAssemblyStarting" filename="C:\Dev\xunit\xunit\src\messages\TestAssemblyStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="StartTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartTime" signature="(System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestEnvironment" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestEnvironment" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkDisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestAssembly,System.DateTime,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCaseCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestCaseCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCaseDescriptor" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Descriptor\TestCaseDescriptor.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ClassName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClassName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialization" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialization" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipReason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipReason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceFileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceFileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceLineNumber" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceLineNumber" signature="(System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueID" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueID" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Decode" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCaseDiscoveryMessage" filename="C:\Dev\xunit\xunit\src\messages\TestCaseDiscoveryMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCaseFinished" filename="C:\Dev\xunit\xunit\src\messages\TestCaseFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,System.Decimal,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCaseMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestCaseMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCaseStarting" filename="C:\Dev\xunit\xunit\src\messages\TestCaseStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassCallbackHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\TestClassCallbackHandler.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestClassResults" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestClassResults" signature="(Xunit.Xunit1RunSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IList`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindTestCase" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnClass" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnStart" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnTest" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnXmlNode" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestMethodTestCases" signature="(Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendTestCaseMessagesWhenAppropriate" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestClassCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestClass,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestClass,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassConstructionFinished" filename="C:\Dev\xunit\xunit\src\messages\TestClassConstructionFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassConstructionStarting" filename="C:\Dev\xunit\xunit\src\messages\TestClassConstructionStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassDisposeFinished" filename="C:\Dev\xunit\xunit\src\messages\TestClassDisposeFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassDisposeStarting" filename="C:\Dev\xunit\xunit\src\messages\TestClassDisposeStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassFinished" filename="C:\Dev\xunit\xunit\src\messages\TestClassFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestClass,System.Decimal,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestClassMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestClass" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestClass" signature="(Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestClassStarting" filename="C:\Dev\xunit\xunit\src\messages\TestClassStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCollectionCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestCollectionCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestCollection,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestCollection,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCollectionFinished" filename="C:\Dev\xunit\xunit\src\messages\TestCollectionFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestCollection,System.Decimal,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCollectionMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestCollectionMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestCollection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCollection" signature="(Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestCollectionStarting" filename="C:\Dev\xunit\xunit\src\messages\TestCollectionStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestDiscoverySink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\TestDiscoverySink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IMessageSink.OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestDiscoveryVisitor" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Visitors\TestDiscoveryVisitor.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="TestCases" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCases" signature="(System.Collections.Generic.List`1&lt;Xunit.Abstractions.ITestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCaseDiscoveryMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestExecutionSummary" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Messages\TestExecutionSummary.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ElapsedClockTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ElapsedClockTime" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InterfaceTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Summaries" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Summaries" signature="(System.Collections.Generic.List`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.String,Xunit.ExecutionSummary&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.TimeSpan,System.Collections.Generic.List`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.String,Xunit.ExecutionSummary&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestFailed" filename="C:\Dev\xunit\xunit\src\messages\TestFailed.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Decimal,System.String,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Decimal,System.String,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestFinished" filename="C:\Dev\xunit\xunit\src\messages\TestFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestFrameworkOptions" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\TestFrameworkOptions.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ForDiscovery" signature="(Xunit.TestAssemblyConfiguration)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ForExecution" signature="(Xunit.TestAssemblyConfiguration)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValue" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetValue" signature="(System.String,TValue)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToDebuggerDisplay" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToDebuggerDisplay" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Test" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Test" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestMessageSink" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Sinks\TestMessageSink.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Diagnostics" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Discovery" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execution" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Runner" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestMessageVisitor" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Visitors\TestMessageVisitor.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DoVisit" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Func`2&lt;TMessage,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DoVisit" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Func`3&lt;Xunit.TestMessageVisitor,TMessage,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestAssemblyDiscoveryFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestAssemblyDiscoveryStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestAssemblyExecutionFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestAssemblyExecutionStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.ITestExecutionSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IAfterTestFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IAfterTestStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IBeforeTestFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IBeforeTestStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IDiagnosticMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IDiscoveryCompleteMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IErrorMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestAssemblyCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestAssemblyFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestAssemblyStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCaseCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCaseDiscoveryMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCaseFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestOutput)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCaseStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassConstructionFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassConstructionStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassDisposeFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassDisposeStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCollectionCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCollectionFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCollectionStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestFailed)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestMethodCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestMethodFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestMethodStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestPassed)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestSkipped)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestMessageVisitor`1" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Visitors\TestMessageVisitor.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="(System.Threading.ManualResetEvent)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestMethodCleanupFailure" filename="C:\Dev\xunit\xunit\src\messages\TestMethodCleanupFailure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestMethod,System.String[],System.String[],System.String[],System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestMethod,System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestMethodFinished" filename="C:\Dev\xunit\xunit\src\messages\TestMethodFinished.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsFailed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsRun" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestsSkipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestMethod,System.Decimal,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestMethodMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestMethodMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TestMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="(Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestMethodStarting" filename="C:\Dev\xunit\xunit\src\messages\TestMethodStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.ITestMethod)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestOutput" filename="C:\Dev\xunit\xunit\src\messages\TestOutput.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestPassed" filename="C:\Dev\xunit\xunit\src\messages\TestPassed.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestResultMessage" filename="C:\Dev\xunit\xunit\src\messages\BaseMessages\TestResultMessage.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.Decimal,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestSkipped" filename="C:\Dev\xunit\xunit\src\messages\TestSkipped.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Reason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.TestStarting" filename="C:\Dev\xunit\xunit\src\messages\TestStarting.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Xunit.Abstractions.ITest)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.VisualStudioSourceInformationProvider" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\VisualStudioSourceInformationProvider.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSourceInformation" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.XmlAggregateVisitor" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Visitors\XmlAggregateVisitor.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecutionSummary" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionSummary" signature="(Xunit.ExecutionSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.IMessageSink,System.Collections.Concurrent.ConcurrentDictionary`2&lt;System.String,Xunit.ExecutionSummary&gt;,System.Xml.Linq.XElement,System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestAssemblyFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.XmlNodeCallbackHandler" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\XmlNodeCallbackHandler.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="LastNode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastNode" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastNodeArrived" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastNodeArrived" signature="(System.Threading.ManualResetEvent)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Predicate`1&lt;System.Xml.XmlNode&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnXmlNode" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="System.Web.UI.ICallbackEventHandler.GetCallbackResult" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.XmlTestExecutionVisitor" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Visitors\XmlTestExecutionVisitor.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CancelThunk" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Errors" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Errors" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Failed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Failed" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Skipped" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Skipped" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Time" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Time" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Total" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Total" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Xml.Linq.XElement,System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateTestResultElement" signature="(Xunit.Abstractions.ITestResultMessage,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCollectionElement" signature="(Xunit.Abstractions.ITestCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessage" signature="(Xunit.Abstractions.IMessageSinkMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestAssemblyFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestAssemblyStarting)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCollectionFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestFailed)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestPassed)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestSkipped)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.IErrorMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestAssemblyCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCaseCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestClassCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCollectionCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Visit" signature="(Xunit.Abstractions.ITestMethodCleanupFailure)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddError" signature="(System.String,System.String,Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateFailureElement" signature="(Xunit.Abstractions.IFailureInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Escape" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="XmlEscape" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit1" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\Xunit1.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="CanUseAppDomains" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFramework" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.AppDomainSupport,Xunit.Abstractions.ISourceInformationProvider,System.String,System.String,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateExecutor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Deserialize" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="EnsureInitialized" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Find" signature="(System.Boolean,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.ITestFrameworkDiscoverer.Find" signature="(System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Find" signature="(System.String,System.Boolean,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.ITestFrameworkDiscoverer.Find" signature="(System.String,System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Find" signature="(System.Predicate`1&lt;Xunit.Abstractions.ITestCaseDiscoveryMessage&gt;,System.Boolean,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Run" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.ITestFrameworkExecutor.RunAll" signature="(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Run" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.ITestFrameworkExecutor.RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestCollection" signature="(Xunit.Abstractions.ITestCollection,System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestClass" signature="(Xunit.Abstractions.ITestClass,System.Collections.Generic.IList`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(Xunit.Abstractions.ITestClass,Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="(Xunit.Abstractions.ITestClass)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit1AssemblyInfo" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\Xunit1AssemblyInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AssemblyFileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyFileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IAssemblyInfo.get_AssemblyPath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IAssemblyInfo.get_Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IAssemblyInfo.GetCustomAttributes" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IAssemblyInfo.GetType" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IAssemblyInfo.GetTypes" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit1ExceptionUtility" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\Xunit1ExceptionUtility.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ConvertToFailureInformation" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertToFailureInformation" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertToFailureInformation" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionTypes" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Messages" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StackTraces" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionParentIndices" signature="(System.Int32[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit1Executor" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\Xunit1Executor.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="TestFrameworkDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkDisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean,System.String,System.String,System.Boolean,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateObject" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="EnumerateTests" signature="(System.Web.UI.ICallbackEventHandler)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetXunitAssemblyPath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(System.String,System.Collections.Generic.List`1&lt;System.String&gt;,System.Web.UI.ICallbackEventHandler)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit1ReflectionWrapper" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\Xunit1ReflectionWrapper.cs" line-rate="1" branch-rate="1" complexity="10">
          <methods>
            <method name="AssemblyFileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyFileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueID" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueID" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IAssemblyInfo.get_AssemblyPath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IAssemblyInfo.get_Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IMethodInfo.get_IsAbstract" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IMethodInfo.get_IsGenericMethodDefinition" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IMethodInfo.get_IsPublic" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IMethodInfo.get_IsStatic" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IMethodInfo.get_Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IMethodInfo.get_ReturnType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.IMethodInfo.get_Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_BaseType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_Interfaces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_IsAbstract" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_IsGenericParameter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_IsGenericType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_IsSealed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_IsValueType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITypeInfo.get_Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IAssemblyInfo.GetCustomAttributes" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IAssemblyInfo.GetType" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IMethodInfo.GetCustomAttributes" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IMethodInfo.GetGenericArguments" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IMethodInfo.GetParameters" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Xunit.Abstractions.IMethodInfo.MakeGenericMethod" signature="(Xunit.Abstractions.ITypeInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.ITypeInfo.GetCustomAttributes" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.Abstractions.ITypeInfo.GetGenericArguments" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Xunit.Abstractions.ITypeInfo.GetMethod" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Xunit-Abstractions-IAssemblyInfo-GetTypes" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Xunit-Abstractions-ITypeInfo-GetMethods" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit1RunSummary" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\Xunit1RunSummary.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Aggregate" signature="(Xunit.Xunit1RunSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit1Test" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\Xunit1Test.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCase" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.Abstractions.ITestCase,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit1TestCase" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v1\Xunit1TestCase.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisplayName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipReason" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SkipReason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceInformation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceInformation" signature="(Xunit.Abstractions.ISourceInformation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethod" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethodArguments" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestMethodArguments" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Traits" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Traits" signature="(System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueID" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestAssembly.get_Assembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfigFileName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfigFileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestCollection.get_CollectionDefinition" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestCollection.get_DisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestCollection.get_TestAssembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestCollection.get_UniqueID" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestClass.get_Class" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestClass.get_TestCollection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestMethod.get_Method" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="t.Abstractions.ITestMethod.get_TestClass" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Collections.Generic.List`1&lt;System.String&gt;&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Deserialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.IXunitSerializationInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit2" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v2\Xunit2.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(Xunit.AppDomainSupport,Xunit.Abstractions.ISourceInformationProvider,System.String,System.String,System.Boolean,System.String,Xunit.Abstractions.IMessageSink,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BulkDeserialize" signature="(System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Deserialize" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RunAll" signature="(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Callback" signature="(System.Collections.Generic.List`1&lt;System.Collections.Generic.KeyValuePair`2&lt;System.String,Xunit.Abstractions.ITestCase&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Xunit2Discoverer" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\v2\Xunit2Discoverer.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="AppDomain" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanUseAppDomains" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiagnosticMessageSink" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Framework" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RemoteDiscoverer" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFramework" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkAssemblyName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.AppDomainSupport,Xunit.Abstractions.ISourceInformationProvider,Xunit.Abstractions.IAssemblyInfo,System.String,System.String,Xunit.Abstractions.IMessageSink,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.AppDomainSupport,Xunit.Abstractions.ISourceInformationProvider,System.String,System.String,System.Boolean,System.String,Xunit.Abstractions.IMessageSink,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.AppDomainSupport,Xunit.Abstractions.ISourceInformationProvider,Xunit.Abstractions.IAssemblyInfo,System.String,System.String,System.String,System.Boolean,System.String,Xunit.Abstractions.IMessageSink,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateOptimizedRemoteMessageSink" signature="(Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Find" signature="(System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Find" signature="(System.String,System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCaseDescriptors" signature="(System.Collections.Generic.List`1&lt;Xunit.Abstractions.ITestCase&gt;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetExecutionAssemblyFileName" signature="(Xunit.AppDomainSupport,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSupportedPlatformSuffixes" signature="(Xunit.AppDomainSupport)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestFrameworkAssemblyName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetXunitExecutionAssemblyPath" signature="(Xunit.AppDomainSupport,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetXunitExecutionAssemblyPath" signature="(Xunit.AppDomainSupport,Xunit.Abstractions.IAssemblyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDotNet" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Callback" signature="(System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.XunitFilters" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Project\XunitFilters.cs" line-rate="1" branch-rate="1" complexity="22">
          <methods>
            <method name="ExcludedTraits" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludedTraits" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExcludedClasses" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludedClasses" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExcludedMethods" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludedMethods" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExcludedNamespaces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludedNamespaces" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Filter" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterExcludedNamespaces" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterIncludedNamespaces" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterExcludedMethodsAndClasses" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterIncludedMethodsAndClasses" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterExcludedTraits" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FilterIncludedTraits" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SplitMethodFilters" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="SplitIncludeMethodFilters" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name="SplitExcludeMethodFilters" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name="WildcardToRegex" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsReadOnly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastMutation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LastMutation" signature="(System.DateTimeOffset)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEqualityComparer`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Contains" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CopyTo" signature="(T[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Remove" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.XunitFrontController" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Frameworks\XunitFrontController.cs" line-rate="1" branch-rate="1" complexity="10">
          <methods>
            <method name="BulkDeserializer" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanUseAppDomains" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DescriptorProvider" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InnerController" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFramework" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkDisplayName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.AppDomainSupport,System.String,System.String,System.Boolean,System.String,Xunit.Abstractions.ISourceInformationProvider,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BulkDeserialize" signature="(System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateInnerController" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Deserialize" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="EnsureInitialized" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="Find" signature="(System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Find" signature="(System.String,System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCaseDescriptors" signature="(System.Collections.Generic.List`1&lt;Xunit.Abstractions.ITestCase&gt;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunAll" signature="(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkExecutionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serialize" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.XunitProject" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Project\XunitProject.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Assemblies" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Filters" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Filters" signature="(Xunit.XunitFilters)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Output" signature="(System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Add" signature="(Xunit.XunitProjectAssembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.XunitProjectAssembly" filename="C:\Dev\xunit\xunit\src\xunit.runner.utility\Project\XunitProjectAssembly.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AssemblyFilename" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyFilename" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfigFilename" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfigFilename" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Configuration" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShadowCopy" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShadowCopy" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="xunit.runner.visualstudio.testadapter" line-rate="0.2347266881028939" branch-rate="0.1423027166882277" complexity="731">
      <classes>
        <class name="AssemblyExtensions" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetLocalCodeBase" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="DictionaryExtensions" filename="/_/src/xunit.runner.visualstudio/Utility/DictionaryExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Add" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,System.Collections.Generic.List`1&lt;TValue&gt;&gt;,TKey,TValue)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,System.Collections.Generic.List`1&lt;TValue&gt;&gt;,TKey,TValue,System.Collections.Generic.IEqualityComparer`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetOrAdd" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;,TKey)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetOrAdd" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;,TKey,System.Func`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToDictionaryIgnoringDuplicateKeys" signature="(System.Collections.Generic.IEnumerable`1&lt;TValue&gt;,System.Func`2&lt;TValue,TKey&gt;,System.Collections.Generic.IEqualityComparer`1&lt;TKey&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToDictionaryIgnoringDuplicateKeys" signature="(System.Collections.Generic.IEnumerable`1&lt;TInput&gt;,System.Func`2&lt;TInput,TKey&gt;,System.Func`2&lt;TInput,TValue&gt;,System.Collections.Generic.IEqualityComparer`1&lt;TKey&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="ExceptionExtensions" filename="/_/src/xunit.runner.visualstudio/Utility/ExceptionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Unwrap" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Guard" filename="/_/src/xunit.runner.visualstudio/Utility/Guard.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ArgumentNotNull" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentNotNullOrEmpty" signature="(System.String,System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ArgumentValid" signature="(System.String,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FileExists" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.DotNet.PlatformAbstractions.ApplicationEnvironment" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.DotNet.PlatformAbstractions/ApplicationEnvironment.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="ApplicationBasePath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetApplicationBasePath" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.DotNet.PlatformAbstractions.HashCodeCombiner" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.DotNet.PlatformAbstractions/HashCodeCombiner.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="CombinedHash" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(TValue,System.Collections.Generic.IEqualityComparer`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Start" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.DotNet.PlatformAbstractions.Native.NativeMethods" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.DotNet.PlatformAbstractions/Native/NativeMethods.Darwin.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="GetKernelRelease" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.DotNet.PlatformAbstractions.Native.NativeMethods" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.DotNet.PlatformAbstractions/Native/NativeMethods.Unix.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="GetUname" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.DotNet.PlatformAbstractions.Native.NativeMethods" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.DotNet.PlatformAbstractions/Native/NativeMethods.Windows.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="RtlGetVersion" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.DotNet.PlatformAbstractions.Native.PlatformApis" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.DotNet.PlatformAbstractions/Native/PlatformApis.cs" line-rate="1" branch-rate="1" complexity="34">
          <methods>
            <method name="GetOSName" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="GetOSVersion" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name="GetDarwinVersion" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="GetOSPlatform" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetDistroId" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetDistroVersionId" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="LoadDistroInfo" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="NormalizeDistroInfo" signature="(Internal.Microsoft.DotNet.PlatformAbstractions.Native.PlatformApis/DistroInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DetermineOSPlatform" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.DotNet.PlatformAbstractions.RuntimeEnvironment" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.DotNet.PlatformAbstractions/RuntimeEnvironment.cs" line-rate="1" branch-rate="1" complexity="24">
          <methods>
            <method name="OperatingSystemPlatform" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OperatingSystemVersion" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OperatingSystem" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RuntimeArchitecture" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetArch" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetRuntimeIdentifier" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetRIDArch" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetRIDVersion" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="GetWindowsProductVersion" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="GetRIDOS" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.CompilationLibrary" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/CompilationLibrary.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Assemblies" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefaultResolver" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.Dependency&gt;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.Dependency&gt;,System.Boolean,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveReferencePaths" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ResolveReferencePaths" signature="(Internal.Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveReferencePaths" signature="(Internal.Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.CompilationOptions" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/CompilationOptions.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Defines" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LanguageVersion" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Platform" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllowUnsafe" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WarningsAsErrors" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Optimize" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="KeyFile" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DelaySign" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PublicSign" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DebugType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EmitEntryPoint" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GenerateXmlDocumentation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Default" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.String,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Boolean&gt;,System.String,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Boolean&gt;,System.String,System.Nullable`1&lt;System.Boolean&gt;,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.Dependency" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/Dependency.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Version" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(Internal.Microsoft.Extensions.DependencyModel.Dependency)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.DependencyContextPaths" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/DependencyContextPaths.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Current" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Application" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SharedRuntime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NonApplicationPaths" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCurrent" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Create" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.DirectoryWrapper" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/DirectoryWrapper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Exists" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.EnvironmentWrapper" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/EnvironmentWrapper.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="GetEnvironmentVariable" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.FileSystemWrapper" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/FileSystemWrapper.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Default" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="File" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Directory" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.FileWrapper" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/FileWrapper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Exists" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadAllText" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OpenRead" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OpenFile" signature="(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateEmptyFile" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.Library" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/Library.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Version" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Hash" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dependencies" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Serviceable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Path" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HashPath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RuntimeStoreManifestName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.Dependency&gt;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.Dependency&gt;,System.Boolean,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.Dependency&gt;,System.Boolean,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.Resolution.AppBaseCompilationAssemblyResolver" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/Resolution/AppBaseCompilationAssemblyResolver.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,System.String,Internal.Microsoft.Extensions.DependencyModel.DependencyContextPaths)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryResolveAssemblyPaths" signature="(Internal.Microsoft.Extensions.DependencyModel.CompilationLibrary,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.Resolution.CompositeCompilationAssemblyResolver" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/Resolution/CompositeCompilationAssemblyResolver.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(Internal.Microsoft.Extensions.DependencyModel.Resolution.ICompilationAssemblyResolver[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryResolveAssemblyPaths" signature="(Internal.Microsoft.Extensions.DependencyModel.CompilationLibrary,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.Resolution.DotNetReferenceAssembliesPathResolver" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/Resolution/DotNetReferenceAssembliesPathResolver.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Resolve" signature="(Internal.Microsoft.Extensions.DependencyModel.IEnvironment,Internal.Microsoft.Extensions.DependencyModel.IFileSystem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Resolve" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetDefaultDotNetReferenceAssembliesPath" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.Resolution.PackageCompilationAssemblyResolver" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/Resolution/PackageCompilationAssemblyResolver.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Internal.Microsoft.Extensions.DependencyModel.IEnvironment,Internal.Microsoft.Extensions.DependencyModel.IFileSystem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultProbeDirectories" signature="(Internal.Microsoft.Extensions.DependencyModel.IEnvironment)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultProbeDirectories" signature="(Internal.Microsoft.DotNet.PlatformAbstractions.Platform,Internal.Microsoft.Extensions.DependencyModel.IEnvironment)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryResolveAssemblyPaths" signature="(Internal.Microsoft.Extensions.DependencyModel.CompilationLibrary,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryResolveFromPackagePath" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,Internal.Microsoft.Extensions.DependencyModel.CompilationLibrary,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.Resolution.ReferenceAssemblyPathResolver" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/Resolution/ReferenceAssemblyPathResolver.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,Internal.Microsoft.Extensions.DependencyModel.IEnvironment)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,System.String,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryResolveAssemblyPaths" signature="(Internal.Microsoft.Extensions.DependencyModel.CompilationLibrary,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryResolveReferenceAssembly" signature="(System.String,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFallbackSearchPaths" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,Internal.Microsoft.DotNet.PlatformAbstractions.Platform,Internal.Microsoft.Extensions.DependencyModel.IEnvironment)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultReferenceAssembliesPath" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,Internal.Microsoft.DotNet.PlatformAbstractions.Platform,Internal.Microsoft.Extensions.DependencyModel.IEnvironment)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.Resolution.ResolverUtils" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/Resolution/ResolverUtils.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TryResolvePackagePath" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,Internal.Microsoft.Extensions.DependencyModel.CompilationLibrary,System.String,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryResolveAssemblyFile" signature="(Internal.Microsoft.Extensions.DependencyModel.IFileSystem,System.String,System.String,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.ResourceAssembly" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/ResourceAssembly.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Locale" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Locale" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Path" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Path" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.RuntimeAssembly" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/RuntimeAssembly.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Path" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/RuntimeAssetGroup.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Runtime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssetPaths" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.RuntimeFallbacks" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/RuntimeFallbacks.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Runtime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Runtime" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Fallbacks" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Fallbacks" signature="(System.Collections.Generic.IReadOnlyList`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.RuntimeLibrary" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/RuntimeLibrary.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="RuntimeAssemblyGroups" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NativeLibraryGroups" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResourceAssemblies" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.Collections.Generic.IReadOnlyList`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.ResourceAssembly&gt;,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.Dependency&gt;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.Collections.Generic.IReadOnlyList`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.ResourceAssembly&gt;,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.Dependency&gt;,System.Boolean,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.Collections.Generic.IReadOnlyList`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.Collections.Generic.IReadOnlyList`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.ResourceAssembly&gt;,System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.Dependency&gt;,System.Boolean,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Internal.Microsoft.Extensions.DependencyModel.TargetInfo" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/TargetInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Framework" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Runtime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RuntimeSignature" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsPortable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="LoggerHelper" filename="/_/src/xunit.runner.visualstudio/Utility/LoggerHelper.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="InnerLogger" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InnerLogger" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Stopwatch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Stopwatch" signature="(System.Diagnostics.Stopwatch)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger,System.Diagnostics.Stopwatch)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Log" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Log" signature="(Xunit.Abstractions.ITestCase,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWithSource" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(Xunit.Abstractions.ITestCase,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogErrorWithSource" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarning" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarning" signature="(Xunit.Abstractions.ITestCase,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarningWithSource" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendMessage" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.TestMessageLevel,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Collections.Generic.CollectionExtensions" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/Microsoft.Extensions.DependencyModel/CollectionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetDefaultGroup" signature="(System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetRuntimeGroup" signature="(System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetGroup" signature="(System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDefaultAssets" signature="(System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetRuntimeAssets" signature="(System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAssets" signature="(System.Collections.Generic.IEnumerable`1&lt;Internal.Microsoft.Extensions.DependencyModel.RuntimeAssetGroup&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="System.Collections.Generic.EnumerableExtensions" filename="/_/src/xunit.runner.visualstudio/Utility/EnumerableExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ForEach" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit._DiagnosticMessage" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/_DiagnosticMessage.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Message" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.AssemblyHelper" filename="/_/src/xunit.runner.visualstudio/Utility/AssemblyResolution/AssemblyHelper_Desktop.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="LoadAssembly" signature="(System.Reflection.AssemblyName)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Resolve" signature="(System.Object,System.ResolveEventArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResolveAndLoadAssembly" signature="(System.String,System.String&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubscribeResolveForAssembly" signature="(System.String,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubscribeResolveForAssembly" signature="(System.Type,Xunit.Abstractions.IMessageSink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.ConsoleHelper" filename="/_/src/xunit.runner.visualstudio/Utility/ConsoleHelper.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="SetForegroundColorANSI" signature="(System.ConsoleColor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SetForegroundColorConsole" signature="(System.ConsoleColor)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ResetColorANSI" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ResetColorConsole" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonArray" filename="/_/src/xunit.runner.visualstudio/Utility/Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Length" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Item" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonValue[],System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonBoolean" filename="/_/src/xunit.runner.visualstudio/Utility/Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="op_Implicit" signature="(Xunit.JsonBoolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonBuffer" filename="/_/src/xunit.runner.visualstudio/Utility/Json.cs" line-rate="1" branch-rate="1" complexity="35">
          <methods>
            <method name=".ctor" signature="(System.IO.TextReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Read" signature="()" line-rate="1" branch-rate="1" complexity="15">
              <lines />
            </method>
            <method name="ReadNextChar" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ReadNumber" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadLiteral" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReadString" signature="()" line-rate="1" branch-rate="1" complexity="17">
              <lines />
            </method>
            <method name="IsWhitespace" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializer" filename="/_/src/xunit.runner.visualstudio/Utility/Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Deserialize" signature="(System.IO.TextReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeInternal" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeArray" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeserializeObject" signature="(Xunit.JsonToken,Xunit.JsonBuffer)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializerException" filename="/_/src/xunit.runner.visualstudio/Utility/Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Column" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Exception,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonDeserializerResource" filename="/_/src/xunit.runner.visualstudio/Utility/Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="JSON_OpenString" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="JSON_InvalidEnd" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_IllegalCharacter" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_IllegalTrailingCharacterAfterLiteral" signature="(System.Int32,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_UnrecognizedLiteral" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_DuplicateObjectMemberName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidFloatNumberFormat" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_FloatNumberOverflow" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntax" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxNotExpected" signature="(System.String,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxNotExpected" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidSyntaxExpectation" signature="(System.String,System.Char,System.Char)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidTokenExpectation" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_InvalidUnicode" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format_UnfinishedJSON" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonNull" filename="/_/src/xunit.runner.visualstudio/Utility/Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonNumber" filename="/_/src/xunit.runner.visualstudio/Utility/Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Double" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raw" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.JsonToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonObject" filename="/_/src/xunit.runner.visualstudio/Utility/Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Keys" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,Xunit.JsonValue&gt;,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsJsonObject" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsInt" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsBoolean" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsNullableBoolean" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueAsStringArray" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonString" filename="/_/src/xunit.runner.visualstudio/Utility/Json.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="op_Implicit" signature="(Xunit.JsonString)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.JsonValue" filename="/_/src/xunit.runner.visualstudio/Utility/Json.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Line" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Column" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.DiagnosticMessageSink" filename="/_/src/xunit.runner.visualstudio/Sinks/DiagnosticMessageSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ForDiagnostics" signature="(LoggerHelper,System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ForInternalDiagnostics" signature="(LoggerHelper,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.RunSettings" filename="/_/src/xunit.runner.visualstudio/Utility/RunSettings.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="CollectSourceInformation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CollectSourceInformation" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DesignMode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DesignMode" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableAppDomain" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableAppDomain" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableParallelization" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DisableParallelization" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalDiagnostics" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InternalDiagnostics" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NoAutoReporters" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NoAutoReporters" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReporterSwitch" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReporterSwitch" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFrameworkVersion" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFrameworkVersion" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Parse" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsMatchingTargetFramework" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.TestCaseFilter" filename="/_/src/xunit.runner.visualstudio/Utility/TestCaseFilter.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,LoggerHelper,System.String,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IDiscoveryContext,LoggerHelper)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchTestCase" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PropertyProvider" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCaseFilterExpression" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,LoggerHelper,System.String,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestCaseFilterExpression&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestCaseFilterExpressionFromDiscoveryContext" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IDiscoveryContext,LoggerHelper,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestCaseFilterExpression&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSupportedPropertyNames" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetTraits" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.TestPlatformContext" filename="/_/src/xunit.runner.visualstudio/TestPlatformContext.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="RequireSourceInformation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RequireSourceInformation" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RequireXunitTestProperty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RequireXunitTestProperty" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.VisualStudioRunnerLogger" filename="/_/src/xunit.runner.visualstudio/Utility/VisualStudioRunnerLogger.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="LockObject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(LoggerHelper)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogError" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogImportantMessage" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogMessage" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LogWarning" signature="(Xunit.StackFrameInfo,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.VsDiscoverySink" filename="/_/src/xunit.runner.visualstudio/Sinks/VsDiscoverySink.cs" line-rate="1" branch-rate="1" complexity="12">
          <methods>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TotalTests" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TotalTests" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Xunit.Abstractions.ITestFrameworkDiscoverer,LoggerHelper,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestCaseDiscoverySink,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,Xunit.Runner.VisualStudio.TestPlatformContext,Xunit.Runner.VisualStudio.TestCaseFilter,System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CreateVsTestCase" signature="(System.String,Xunit.TestCaseDescriptor,LoggerHelper,Xunit.Runner.VisualStudio.TestPlatformContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Escape" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Truncate" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finish" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetAddTraitThunk" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="HandleCancellation" signature="(Xunit.MessageHandlerArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseDiscoveryMessage" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseDiscoveryMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleDiscoveryCompleteMessage" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.IDiscoveryCompleteMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Xunit.IMessageSinkWithTypes.OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SendExistingTestCases" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="GuidFromString" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.VsExecutionDiscoverySink" filename="/_/src/xunit.runner.visualstudio/Sinks/VsExecutionDiscoverySink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finish" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.VsExecutionSink" filename="/_/src/xunit.runner.visualstudio/Sinks/VsExecutionSink.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ExecutionSummary" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionSummary" signature="(Xunit.ExecutionSummary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Finished" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(Xunit.IMessageSinkWithTypes,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestExecutionRecorder,LoggerHelper,System.Collections.Generic.Dictionary`2&lt;System.String,Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;,Xunit.Abstractions.ITestFrameworkExecutionOptions,System.Func`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="FindTestCase" signature="(Xunit.Abstractions.ITestCase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryAndReport" signature="(System.String,Xunit.Abstractions.ITestCase,System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleCancellation" signature="(Xunit.MessageHandlerArgs)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleErrorMessage" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.IErrorMessage&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestFailed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestFailed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestPassed" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestPassed&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestSkipped" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestSkipped&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseStarting" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseStarting&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseFinished" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseFinished&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestAssemblyCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestAssemblyCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCaseCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCaseCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestClassCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestClassCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCollectionCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCollectionCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleTestMethodCleanupFailure" signature="(Xunit.MessageHandlerArgs`1&lt;Xunit.Abstractions.ITestMethodCleanupFailure&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteError" signature="(System.String,Xunit.Abstractions.IFailureInformation,System.Collections.Generic.IEnumerable`1&lt;Xunit.Abstractions.ITestCase&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MakeVsTestResult" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestOutcome,Xunit.Abstractions.ITestResultMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MakeVsTestResult" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestOutcome,Xunit.Abstractions.ITestSkipped)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MakeVsTestResult" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.TestOutcome,Xunit.Abstractions.ITestCase,System.String,System.Double,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAggregatedTestOutcome" signature="(Xunit.Abstractions.ITestCaseFinished)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnMessageWithTypes" signature="(Xunit.Abstractions.IMessageSinkMessage,System.Collections.Generic.HashSet`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="Xunit.Runner.VisualStudio.VsTestRunner" filename="/_/src/xunit.runner.visualstudio/VsTestRunner.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Cancel" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestDiscoverer.DiscoverTests" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IDiscoveryContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging.IMessageLogger,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestCaseDiscoverySink)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PrintHeader" signature="(LoggerHelper)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestExecutor.RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.ITestExecutor.RunTests" signature="(System.Collections.Generic.IEnumerable`1&lt;Microsoft.VisualStudio.TestPlatform.ObjectModel.TestCase&gt;,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainsAppX" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscoverTests" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,LoggerHelper,Xunit.Runner.VisualStudio.TestPlatformContext,Xunit.Runner.VisualStudio.RunSettings,System.Func`4&lt;System.String,Xunit.Abstractions.ITestFrameworkDiscoverer,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,TVisitor&gt;,System.Action`4&lt;System.String,Xunit.Abstractions.ITestFrameworkDiscoverer,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,TVisitor&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscoverTestsInSource" signature="(Xunit.XunitFrontController,LoggerHelper,Xunit.Runner.VisualStudio.TestPlatformContext,Xunit.Runner.VisualStudio.RunSettings,System.Func`4&lt;System.String,Xunit.Abstractions.ITestFrameworkDiscoverer,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,TVisitor&gt;,System.Action`4&lt;System.String,Xunit.Abstractions.ITestFrameworkDiscoverer,Xunit.Abstractions.ITestFrameworkDiscoveryOptions,TVisitor&gt;,System.String,System.Boolean,Xunit.TestAssemblyConfiguration)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetConfigurationStreamForAssembly" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTestProperty" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IsXunitTestAssembly" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAssemblyFileName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LoadConfiguration" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTests" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle,LoggerHelper,Xunit.Runner.VisualStudio.TestPlatformContext,Xunit.Runner.VisualStudio.RunSettings,System.Func`1&lt;System.Collections.Generic.List`1&lt;Xunit.Runner.VisualStudio.AssemblyRunInfo&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestsInAssembly" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle,LoggerHelper,Xunit.Runner.VisualStudio.TestPlatformContext,Xunit.Runner.VisualStudio.RunSettings,Xunit.IMessageSinkWithTypes,Xunit.Runner.VisualStudio.AssemblyRunInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunTestsInAssemblyAsync" signature="(Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IRunContext,Microsoft.VisualStudio.TestPlatform.ObjectModel.Adapter.IFrameworkHandle,LoggerHelper,Xunit.Runner.VisualStudio.TestPlatformContext,Xunit.Runner.VisualStudio.RunSettings,Xunit.IMessageSinkWithTypes,Xunit.Runner.VisualStudio.AssemblyRunInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetRunnerReporter" signature="(LoggerHelper,Xunit.Runner.VisualStudio.RunSettings,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAvailableRunnerReporters" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetVsTestCases" signature="(System.String,Xunit.Abstractions.ITestFrameworkDiscoverer,Xunit.Runner.VisualStudio.VsExecutionDiscoverySink,LoggerHelper,Xunit.Runner.VisualStudio.TestPlatformContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TraitNames" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="VSTestCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UniqueID" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,Xunit.TestCaseDescriptor,Xunit.Abstractions.ITestCase,LoggerHelper,Xunit.Runner.VisualStudio.TestPlatformContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
  </packages>
</coverage>